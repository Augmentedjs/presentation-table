{"version":3,"sources":["webpack://presentation-table/webpack/universalModuleDefinition","webpack://presentation-table/webpack/bootstrap","webpack://presentation-table/./src/autoTable.js","webpack://presentation-table/external {\"commonjs\":\"next-core-utilities\",\"commonjs2\":\"next-core-utilities\",\"amd\":\"next-core-utilities\",\"root\":\"next-core-utilities\"}","webpack://presentation-table/external {\"commonjs\":\"presentation-models\",\"commonjs2\":\"presentation-models\",\"amd\":\"presentation-models\",\"root\":\"presentation-models\"}","webpack://presentation-table/./src/index.js","webpack://presentation-table/external {\"commonjs\":\"presentation-decorator\",\"commonjs2\":\"presentation-decorator\",\"amd\":\"presentation-decorator\",\"root\":\"presentation-decorator\"}","webpack://presentation-table/./src/functions/buildTable.js","webpack://presentation-table/./src/functions/messages.js","webpack://presentation-table/external {\"commonjs\":\"presentation-request\",\"commonjs2\":\"presentation-request\",\"amd\":\"presentation-request\",\"root\":\"presentation-request\"}","webpack://presentation-table/external {\"commonjs\":\"presentation-dom\",\"commonjs2\":\"presentation-dom\",\"amd\":\"presentation-dom\",\"root\":\"presentation-dom\"}","webpack://presentation-table/./src/bigDataTable.js","webpack://presentation-table/./src/editableBigTable.js","webpack://presentation-table/./src/editableLocalStorageTable.js","webpack://presentation-table/./src/editableTable.js","webpack://presentation-table/./src/localStorageTable.js","webpack://presentation-table/./src/spreadsheet.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__8__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","AutomaticTable","DecoratorView","constructor","options","super","style","theme","wholeRow","column","link","Model","PaginationFactory","collection","LocalStorageCollection","Collection","isObject","parsedSchema","JSON","uri","data","Array","schema","description","setTheme","el","Dom","e","rowLink","row","sortBy","sortKey","currentPage","totalPages","nextPage","previousPage","goToPage","page","firstPage","lastPage","editCell","col","model","at","columns","copyCell","row1","col1","row2","col2","model1","name1","model2","clearCell","render","document","tbody","thead","_columns","isMaterial","_style","includes","directDOMTableHeader","length","directDOMEditableTableBody","directDOMTableBody","links","console","messagePosition","directDOMTableCompile","directDOMPaginationControl","retrieveSchema","that","request","url","contentType","dataType","success","status","error","fetch","view","reset","save","override","editable","successHandler","failHandler","populate","source","clear","refresh","saveCell","event","parseInt","TABLE_DATA_ATTRIBUTES","compileTemplate","setURI","setSchema","showProgressBar","show","showMessage","message","validate","messages","isValid","remove","getSelected","json","keys","selected","_attributes","Number","getSelectedAsJSON","getSelectedIndex","removeRows","rows","removeSelectedRows","exportTo","type","csvTableCompile","tsvTableCompile","defaultTableCompile","_bindCellChangeEvents","myEl","cells","slice","_unbindCellChangeEvents","_unbindPaginationControlEvents","first","previous","next","last","_bindPaginationControlEvents","_deriveEventTarget","_sortByHeaderEvent","_unbindSortableColumnEvents","list","localName","_bindSortableColumnEvents","BigDataTable","EditableBigDataTable","EditableLocalStorageTable","EditableTable","LocalStorageTable","Spreadsheet","desc","del","csv","obj","dobj","defaultTableHeader","lineNumbers","display","html","NAME","DESCRIPTION","editableTableBody","defaultTableBody","TYPE","selectable","linkable","linksConfig","linkCallback","table","tr","displayCol","td","tn","String","a","ln","cobj","iii","lll","input","option","tOption","iiii","llll","option2","tOption2","ii","ll","_generate"],"mappings":"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","file":"presentation-table.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"next-core-utilities\"), require(\"presentation-models\"), require(\"presentation-decorator\"), require(\"presentation-request\"), require(\"presentation-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"presentation-table\", [\"next-core-utilities\", \"presentation-models\", \"presentation-decorator\", \"presentation-request\", \"presentation-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"presentation-table\"] = factory(require(\"next-core-utilities\"), require(\"presentation-models\"), require(\"presentation-decorator\"), require(\"presentation-request\"), require(\"presentation-dom\"));\n\telse\n\t\troot[\"presentation-table\"] = factory(root[\"next-core-utilities\"], root[\"presentation-models\"], root[\"presentation-decorator\"], root[\"presentation-request\"], root[\"presentation-dom\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__7__, __WEBPACK_EXTERNAL_MODULE__8__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import { isObject } from \"next-core-utilities\";\nimport { DecoratorView } from \"presentation-decorator\";\nimport {\n  TABLE_DATA_ATTRIBUTES,\n  csvTableCompile,\n  tsvTableCompile,\n  defaultTableCompile,\n  directDOMTableCompile,\n  directDOMTableHeader,\n  directDOMTableBody,\n  directDOMEditableTableBody,\n  directDOMPaginationControl\n} from \"./functions/buildTable.js\";\nimport formatValidationMessages from \"./functions/messages.js\";\nimport { request } from \"presentation-request\";\nimport Dom from \"presentation-dom\";\nimport { PaginationFactory, Model, Collection, LocalStorageCollection } from \"presentation-models\";\n\nconst DEFAULT_KEY = \"augmented.localstorage.autotable.key\";\nconst DEFAULT_SORT_TYPE = \"client\";\nconst DEFAULT_THEME = \"material\";\n\n/**\n * AutomaticTable<br/>\n * Creates a table automatically via a schema for defintion and a uri/json for data\n * @extends DecoratorView\n * @memberof Component\n * @example\n * const at = new AutomaticTable({\n *     schema: schema,\n *     el: \"#autoTable\",\n *     crossOrigin: false,\n *     sortable: true,\n *     lineNumbers: true,\n *     editable: true,\n *     uri: \"/example/data/table.json\",\n *     messagePosition: \"top\", // or bottom\n *     theme: \"material\",\n *     linkable: true,\n *     links: {\n *        wholeRow: true,\n *        column: \"\",\n *        link: \"rowLink\"\n *     },\n *     fetchOnStart: false\n * });\n */\nclass AutomaticTable extends DecoratorView {\n  constructor(options) {\n    super(options);\n\n    const style = (this.style) ? this.style + \" \" : \"\";\n\n    if (options && options.theme) {\n      this.theme = `${style}${options.theme}`;\n    } else {\n      this.theme = `${style}${DEFAULT_THEME}`;\n    }\n\n    if (options && options.linkable) {\n      this.linkable = options.linkable;\n    } else {\n      this.linkable = false;\n    }\n\n    if (options && options.links) {\n      this.links = options.links;\n    } else {\n      this.links = {\n        wholeRow: true,\n        column: \"\",\n        link: \"rowLink\"\n      };\n    }\n\n    if (options && options.selectable) {\n      this.selectable = options.selectable;\n    } else {\n      this.selectable = false;\n    }\n\n    if (options && options.sortable) {\n      this.sortable = options.sortable;\n    } else {\n      this.sortable = false;\n    }\n\n    if (options && options.sortStyle) {\n      this.sortStyle = options.sortStyle;\n    } else {\n      this.sortStyle = DEFAULT_SORT_TYPE;\n    }\n\n    if (options && options.sortKey) {\n      this.sortKey = options.sortKey;\n    } else {\n      this.sortKey = null;\n    }\n\n    if (options && options.display) {\n      this.display = options.display;\n    } else {\n      this.display = null;\n    }\n\n    if (options && options.pagination) {\n      this.renderPaginationControl = options.pagination;\n    } else {\n      this.renderPaginationControl = false;\n    }\n\n    if (options && options.paginationAPI) {\n      this.paginationAPI = options.paginationAPI;\n    } else {\n      this.paginationAPI = null;\n    }\n\n    if (options && options.description) {\n      this.description = options.description;\n    } else {\n      this.description = \"\";\n    }\n\n    if (options && options.localStorage) {\n      this.localStorage = options.localStorage;\n    } else {\n      this.localStorage = false;\n    }\n\n    if (options && options.localStorageKey) {\n      this.localStorageKey = options.localStorageKey;\n    } else {\n      this.localStorageKey = DEFAULT_KEY;\n    }\n\n    if (options && options.editable) {\n      this.editable = options.editable;\n    } else {\n      this.editable = false;\n    }\n\n    if (options && options.crossOrigin) {\n      this.crossOrigin = options.crossOrigin;\n    } else {\n      this.crossOrigin = false;\n    }\n\n    if (options && options.lineNumbers) {\n      this.lineNumbers = options.lineNumbers;\n    } else {\n      this.lineNumbers = false;\n    }\n\n    if (options && options.uri) {\n      this.uri = options.uri;\n    } else {\n      this.uri = false;\n    }\n\n    if (options && options.data) {\n      this.data = options.data;\n    } else {\n      this.data = [];\n    }\n\n    if (options && options.messagePosition) {\n      this.messagePosition = options.messagePosition;\n    } else {\n      this.messagePosition = \"bottom\";\n    }\n\n    this._columns = {};\n    this.isInitalized = false;\n    this.pageControlBound = false;\n\n    if (!this.model) {\n      this.model = new Model();\n    }\n\n    if (this.collection) {\n      this.collection.reset();\n    }\n\n    if (!this.collection && this.paginationAPI) {\n      this.collection = PaginationFactory.getPaginatedCollection(this.paginationAPI);\n      this.paginationAPI = this.collection.paginationAPI;\n      this.localStorage = false;\n    } else if (!this.collection && this.localStorage) {\n      this.collection = new LocalStorageCollection();\n    } else if (!this.collection) {\n      this.collection = new Collection();\n    }\n\n    if (options && options.schema) {\n      // check if this is a schema vs a URI to get a schema\n      if (isObject(options.schema)) {\n        this.schema = options.schema;\n      } else {\n        // is a URI?\n        let parsedSchema = null;\n        try {\n          parsedSchema = JSON.parse(options.schema);\n          if (parsedSchema && isObject(parsedSchema)) {\n            this.schema = parsedSchema;\n          }\n        } catch(e) {\n          //_logger.warn(\"AUGMENTED: AutoTable parsing string schema failed.  URI perhaps?\");\n        }\n        if (!this.schema) {\n          this.retrieveSchema(options.schema);\n          this.isInitalized = false;\n        }\n      }\n    } else {\n      this.schema = null;\n    }\n\n    if (this.uri && this.collection) {\n      this.collection.uri = options.uri;\n    }\n\n    if (this.data && (Array.isArray(this.data))) {\n      this.populate(this.data);\n    }\n\n    if (options && options.localStorageKey && !options.uri) {\n      this.localStorageKey = options.localStorageKey;\n      this.uri = null;\n    }\n\n    if (this.collection && this.uri) {\n      this.collection.uri = this.uri;\n    }\n    if (this.collection) {\n      this.collection.crossOrigin = this.crossOrigin;\n    }\n\n    if (this.schema) {\n      if ((!this.name || this.name === \"\") && this.schema.title) {\n        this.name = this.schema.title;\n        this.name.split(\" \").join(\"\");\n      }\n\n      if ((!this.description || this.description === \"\") && this.schema.description) {\n        this.description = this.schema.description;\n      }\n\n      if (!this.isInitalized) {\n        this._columns = this.schema.properties;\n        this.collection.schema = this.schema;\n        this.isInitalized = true;\n      }\n    } else {\n      this.isInitalized = false;\n    }\n\n    if (options.fetchOnStart) {\n      this._fetchOnStart = true;\n    } else {\n      this._fetchOnStart = false;\n    }\n  };\n\n  /**\n   * The theme property - The theme of this table (default is 'material')\n   * @property {string} theme The theme of this table\n   */\n\n /**\n  * The linkable property - enable links in a row (only works in non-editable tables)\n  * @property {boolean} linkable enable/disable linking a row\n  */\n\n  /**\n   * The selectable property - enable selecting a row in table\n   * @property {boolean} selectable enable/disable selecting a row\n   */\n\n  /**\n   * The sortable property - enable sorting in table\n   * @property {boolean} sortable enable sorting in the table\n   */\n\n  /**\n   * The sortStyle property - setup the sort API\n   * @property {string} sortStyle setup the sort API\n   */\n\n  /**\n   * The sortKey property\n   * @property {string} sortKey sorted key\n   * @private\n   */\n\n   /**\n    * The messagePosition property\n    * @property {string} messagePosition Sets position of the message top or bottom\n    * @private\n    */\n\n  /**\n   * The links property - setup linking structure for links in a row\n   * @property {boolean} linkable enable/disable linking a row\n   * @example links: {\n   * wholeRow: false, // link whole row vs column\n   * column: \"name\", // name of column\n   *\tlink: \"rowLink\" // callback or method in class\n   * }\n   */\n\n  /**\n   * The localStorage property - enables localStorage\n   * @property {boolean} localStorage The localStorage property\n   */\n\n  /**\n   * The localStorageKey property - set the key for use in storage\n   * @property {string} localStorageKey The localStorage key property\n   */\n\n  /**\n   * The editable property - enables editing of cells\n   * @property {boolean} editable The editable property\n   */\n\n /**\n  * Fields to display - null will display all\n  * @property {array} display Fields to display\n  */\n\n  // pagination\n /**\n  * The renderPaginationControl property - render the pagination control\n  * @property {boolean} renderPaginationControl render the pagination control\n  */\n\n /**\n  * The paginationAPI property - setup the paginatin API to use\n  * @property {Augmented.PaginationFactory.type} paginationAPI the pagination API to use\n  */\n\n /**\n  * The name property\n  * @property {string} name The name of the table\n  */\n\n /**\n  * The description property\n  * @property {string} description The description of the table\n  */\n\n  /**\n   * The crossOrigin property - enables cross origin fetch\n   * @property {boolean} crossOrigin The crossOrigin property\n   */\n\n  /**\n   * The lineNumber property - turns on line numbers\n   * @property {boolean} lineNumbers The lineNumbers property\n   */\n\n  /**\n   * The columns property\n   * @property {object} columns The columns property\n   * @private\n   */\n\n  /**\n   * The URI property\n   * @property {string} uri The URI property\n   */\n\n  /**\n   * The data property\n   * @property {array} data The data property\n   * @private\n   */\n\n  /**\n   * The collection property\n   * @property {Augmented.PaginatedCollection} collection The collection property\n   * @private\n   */\n\n  /**\n   * The initialized property\n   * @property {boolean} isInitalized The initialized property\n   */\n\n  /**\n   * The theme of the table\n   * @param {string} theme name of the theme\n   */\n   setTheme(theme) {\n     const el = Dom.selector(this.el);//((typeof this.el === 'string') ? document.querySelector(this.el) : this.el),\n     if (el) {\n       let e = el.querySelector(\"table\");\n       if (e) {\n         e.setAttribute(\"class\", theme);\n       }\n     }\n     this.theme = theme;\n   };\n\n  /**\n   * The default rowlink function callback called by row to format a link\n   * @param {array} row The row data\n   * @returns {string} Returns the link uri\n   */\n   rowLink(row) {\n     return \"\";\n   };\n\n  /**\n   * Sort the tabe by a key (sent via a UI Event)\n   * @param {string} key The key to sort by\n   */\n   sortBy(key) {\n     if (key && ( (this.editable) || (!this.editable && this.sortKey !== key))) {\n       this.sortKey = key;\n       this.collection.sortByKey(key);\n       this.refresh();\n     }\n   };\n\n /**\n  * Return the current page number\n  * @returns {number} The current page number\n  */\n  currentPage() {\n    return this.collection.currentPage;\n  };\n\n /**\n  * Return the total pages\n  * @returns {number} The total pages\n  */\n  totalPages() {\n    return this.collection.totalPages;\n  };\n\n /**\n  * Advance to the next page\n  */\n  nextPage() {\n    this.collection.nextPage();\n    this.refresh();\n  };\n\n /**\n  * Return to the previous page\n  */\n  previousPage() {\n    this.collection.previousPage();\n    this.refresh();\n  };\n\n /**\n  * Go to a specific page\n  * @param {number} page The page to go to\n  */\n  goToPage(page) {\n    this.collection.goToPage(page);\n    this.refresh();\n  };\n\n /**\n  * Return to the first page\n  */\n  firstPage() {\n    this.collection.firstPage();\n    this.refresh();\n  };\n\n /**\n  * Advance to the last page\n  */\n  lastPage() {\n    this.collection.lastPage();\n    this.refresh();\n  };\n\n /**\n  * Edit a cell at the row and column specified\n  * @param {number} row The row\n  * @param {number} col The column\n  * @param {any} value The value to set\n  */\n  editCell(row, col, value) {\n    if (row && col) {\n      let model = this.collection.at(row), name = this.columns[col];\n      if (model && name) {\n        model.set(name, value);\n      }\n    }\n  };\n\n /**\n  * Copy a cell at the row and column  to another\n  * @param {number} row1 The 'from' row\n  * @param {number} col1 The 'from' column\n  * @param {number} row2 The 'to' row\n  * @param {number} col2 The 'to' column\n  */\n  copyCell(row1, col1, row2, col2) {\n    if (row1 && col1 && row2 && col2) {\n      let model1 = this.collection.at(row1), name1 = this.columns[col1],\n      model2 = this.collection.at(row);\n      if (model1 && name1 && model2) {\n        model2.set(name1, value1);\n      }\n    }\n  };\n /**\n  * Clear a cell at the row and column specified\n  * @param {number} row The row\n  * @param {number} col The column\n  */\n  clearCell(row, col) {\n    this.editCell(row, col, null);\n  };\n\n /**\n  * Render the table\n  * @returns {object} Returns the view context ('this')\n  */\n  render() {\n    this.model = new Model();\n    //console.log(\"render\");\n    if (!this.isInitalized) {\n      //console.warn(\"AUGMENTED: AutoTable Can't render yet, not initialized!\");\n      return this;\n    }\n    let e;\n    if (this.template) {\n      // refresh the table body only\n\t    //console.log(\"set progress.\");\n      this.showProgressBar(true);\n      if (this.el) {\n        e = (typeof this.el === 'string') ? document.querySelector(this.el) : this.el;\n        //console.log(\"my el\", e);\n        if (e) {\n\t        let tbody = e.querySelector(\"tbody\"), thead = e.querySelector(\"thead\");\n          if (this.sortable) {\n            this._unbindSortableColumnEvents();\n          }\n          if (this.editable) {\n            this._unbindCellChangeEvents();\n          }\n          if (this._columns && (Object.keys(this._columns).length > 0)){\n            if (thead) {\n              while (thead.hasChildNodes()) {\n                thead.removeChild(thead.lastChild);\n              }\n            }\n            const isMaterial = (this._style.includes(\"material\"));\n            directDOMTableHeader(thead, this._columns, this.lineNumbers, this.sortKey, this.display, this.selectable, isMaterial);\n          } else {\n      \t\t  if (thead) {\n              while (thead.hasChildNodes()) {\n                thead.removeChild(thead.lastChild);\n              }\n      \t\t  }\n          }\n          if (this.collection && (this.collection.length > 0) && tbody) {\n            if (tbody) {\n              while (tbody.hasChildNodes()) {\n                tbody.removeChild(tbody.lastChild);\n              }\n            }\n            if (this.editable) {\n              // links not supported\n              directDOMEditableTableBody(tbody, this.collection.toJSON(), this._columns, this.lineNumbers, this.sortKey, this.display, this.selectable, this.name);\n            } else {\n              directDOMTableBody(tbody, this.collection.toJSON(), this._columns, this.lineNumbers, this.sortKey, this.display, this.selectable, this.name, this.linkable, this.links, this[this.links.link]);\n            }\n          } else {\n            if (tbody) {\n              while (tbody.hasChildNodes()) {\n                tbody.removeChild(tbody.lastChild);\n              }\n            }\n          }\n        }\n      } else {\n        console.warn(`AUGMENTED: AutoTable ${this.name} no element anchor, not rendering.`);\n      }\n    } else {\n      //console.debug(\"no template\");\n      this.template = \"notused\";\n      this.showProgressBar(true);\n\n      if (this.el) {\n        //console.debug(\"no template with el \" + this.el);\n        e = (typeof this.el === 'string') ? document.querySelector(this.el) : this.el;\n        if (e) {\n          e.innerHTML = \"\";\n          // progress bar\n          let n = document.createElement(\"progress\"),\n          t = document.createTextNode(\"Please wait.\");\n          n.appendChild(t);\n          e.appendChild(n);\n\n          const isMaterial = (this._style.includes(\"material\"));\n\n          if (this.messagePosition === \"top\") {\n            // message\n            n = document.createElement(\"p\");\n            n.classList.add(\"message\");\n            e.appendChild(n);\n          }\n\n          // the table\n          directDOMTableCompile(\n            e,\n            this.name,\n            this.description,\n            this._columns,\n            this.collection.toJSON(),\n            this.lineNumbers,\n            this.sortKey,\n            this.editable,\n            this.display,\n            this.selectable,\n            this.linkable,\n            this.links,\n            this[this.links.link],\n            isMaterial\n          );\n\n          // pagination control\n          if (this.renderPaginationControl) {\n            directDOMPaginationControl(e, this.currentPage(), this.totalPages());\n          }\n          if (this.messagePosition === \"bottom\") {\n            // message\n            n = document.createElement(\"p\");\n            n.classList.add(\"message\");\n            e.appendChild(n);\n          }\n        }\n      } else {\n        console.warn(`AUGMENTED: AutoTable ${this.name} no element anchor, not rendering.`);\n      }\n\n      if (this.renderPaginationControl) {\n        this._bindPaginationControlEvents();\n      }\n    }\n    this.delegateEvents();\n\n    if (this.sortable) {\n      this._bindSortableColumnEvents();\n    }\n\n    if (this.editable) {\n      this._bindCellChangeEvents();\n    }\n\n    this.showProgressBar(false);\n    this.setTheme(this.theme);\n\n    // fetch if told so\n    if (this._fetchOnStart) {\n      this.fetch();\n      this._fetchOnStart = false;\n    }\n\n    return this;\n  };\n\n /**\n  * Fetch the schema from the source URI\n  * @param uri {string} the URI to fetch from\n  */\n  retrieveSchema(uri) {\n    const that = this;\n    let schema = null;\n\n    // TODO: make a fetch\n    request({\n      url: uri,\n      contentType: \"application/json\",\n      dataType: \"json\",\n      success: (data, status) => {\n        if (typeof data === \"string\") {\n          schema = JSON.parse(data);\n        } else {\n          schema = data;\n        }\n        const options = { \"schema\": schema };\n        that.initialize(options);\n      },\n      error: (data, status) => {\n        this.showMessage(`${this.name} Failed to fetch schema!!  ${status}`);\n      }\n    });\n  };\n\n /**\n  * Fetch the data from the source URI\n  */\n  fetch() {\n    // TODO: should be a promise\n    this.showProgressBar(true);\n\n    const view = this;\n\n    const successHandler = function() {\n      view.showProgressBar(false);\n      view.sortKey = null;\n      view.populate(view.collection.toJSON());\n      view.refresh();\n    };\n\n    const failHandler = function() {\n      view.showProgressBar(false);\n      view.showMessage(\"AutomaticTable fetch failed!\");\n    };\n\n    if (this.uri) {\n      this.collection.uri = this.uri;\n    }\n\n    this.collection.fetch({\n      reset: true,\n      success(){\n        successHandler();\n      },\n      error(){\n        failHandler();\n      }\n    });\n  };\n\n /**\n  * Save the data to the source\n  * This only functions if the table is editable\n  * @param {boolean} override Save even if not editable\n  * @returns Returns true if succesfull\n  */\n  save(override) {\n    if (this.editable || override) {\n      this.showProgressBar(true);\n\n      const view = this;\n\n      const successHandler = function() {\n        view.showProgressBar(false);\n        return true;\n      };\n\n      const failHandler = function() {\n        view.showProgressBar(false);\n        view.showMessage(\"AutomaticTable save failed!\");\n        //_logger.warn(\"AUGMENTED: AutomaticTable save failed!\");\n        return false;\n      };\n\n      this.collection.save({\n        reset: true,\n        success(){\n          successHandler();\n        },\n        error(){\n          failHandler();\n        }\n      });\n    }\n    return false;\n  };\n\n /**\n  * Populate the data in the table\n  * @param {array} source The source data array\n  */\n  populate(source) {\n    if (source && Array.isArray(source)) {\n      this.sortKey = null;\n      this.data = source;\n      this.collection.reset(this.data);\n    }\n  };\n\n /**\n  * Clear all the data in the table\n  */\n  clear() {\n    this.sortKey = null;\n    this.data = [];\n    this.collection.reset(null);\n  };\n\n /**\n  * Refresh the table (Same as render)\n  * @returns {object} Returns the view context ('this')\n  * @see AutomaticTable.render\n  */\n  refresh() {\n    return this.render();\n  };\n\n /**\n  * Save Cell Event\n  * @private\n  */\n  saveCell(event) {\n    const key = event.target, model = this.collection.at(parseInt(key.getAttribute(TABLE_DATA_ATTRIBUTES.INDEX)));\n    let value = key.value;\n    if ((key.getAttribute(\"type\")) === \"number\") {\n      value = parseInt(key.value);\n    }\n    model.set(key.getAttribute(TABLE_DATA_ATTRIBUTES.NAME), value);\n  };\n\n /**\n  * An overridable template compile\n  * @returns {string} Returns the template\n  */\n  compileTemplate() {\n    return \"\";\n  };\n\n /**\n  * Sets the URI\n  * @param {string} uri The URI\n  */\n  setURI(uri) {\n    if (uri) {\n      this.uri = uri;\n      this.collection.uri = uri;\n    }\n  };\n\n /**\n  * Sets the schema\n  * @param {object} schema The JSON schema of the dataset\n  */\n  setSchema(schema) {\n    this.schema = schema;\n    this._columns = schema.properties;\n    this.collection.reset();\n    this.collection.schema = schema;\n\n    if (this.uri) {\n      this.collection.uri = this.uri;\n    }\n  };\n\n /**\n  * Enable/Disable the progress bar\n  * @param {boolean} show Show or Hide the progress bar\n  */\n  showProgressBar(show) {\n    if (this.el) {\n      let e = (typeof this.el === 'string') ? document.querySelector(this.el) : this.el;\n      if (e) {\n        let p = e.querySelector(\"progress\");\n        if (p) {\n          p.style.display = (show) ? \"block\" : \"none\";\n          p.style.visibility = (show) ? \"visible\" : \"hidden\";\n        }\n      }\n    }\n  };\n\n /**\n  * Show a message related to the table\n  * @param {string} message Some message to display\n  */\n  showMessage(message) {\n    if (this.el && message) {\n      let e = (typeof this.el === 'string') ? document.querySelector(this.el) : this.el;\n      let p = e.querySelector(\"p[class=message]\");\n      if (p) {\n        p.innerHTML = message;\n      }\n    }\n  };\n /**\n\n  * Validate the table\n  * @returns {boolean} Returns true on success of validation\n  */\n  validate() {\n    let messages = (this.collection) ? this.collection.validate() : null;\n    if (!this.collection.isValid() && messages && messages.messages) {\n      this.showMessage(formatValidationMessages(messages.messages));\n    } else {\n      this.showMessage(\"\");\n    }\n    return messages;\n  };\n\n /**\n  * Is the table valid\n  * @returns {boolean} Returns true if valid\n  */\n  isValid() {\n    return (this.collection) ? this.collection.isValid() : true;\n  };\n\n /**\n  * Remove the table and all binds\n  * @returns Returns the context (this)\n  */\n  remove() {\n    /* off to unbind the events */\n    this.undelegateEvents();\n    this.off();\n    this.stopListening();\n    if (this.el) {\n      const el = Dom.selector(this.el);\n      if (el) {\n        el.innerHTML = \"\";\n      } else {\n        //console.debug(\"no el selected to remove \" + this.el);\n      }\n    } else {\n      //console.debug(\"no el to remove\");\n    }\n    Dom.empty(this.el);\n\n    return this;\n  };\n /**\n  * Gets the selected models\n  * @returns {Array} Returns array of selected rows (models)\n  * @param {boolean} json convert to array of objects\n  */\n  getSelected(json) {\n    const keys = Object.keys(this.model._attributes), l = keys.length, selected = [];\n    let i = 0;\n    for (i = 0; i < l; i++) {\n      if (keys[i].includes(\"row-\") && this.model._attributes[keys[i]] === true) {\n        const n = Number(keys[i].substring(4));\n        const model = this.collection.at(n);\n        if (json) {\n          selected.push(model.toJSON());\n        } else {\n          selected.push(model);\n        }\n      }\n    }\n    return selected;\n  };\n\n  /**\n   * Gets the selected models as JSON\n   * @returns {Array} Returns array of selected rows (JSON Objects)\n   */\n  getSelectedAsJSON() {\n    return this.getSelected(true);\n  };\n\n /**\n  * Gets the selected row indexes\n  * @returns {Array} Returns array of selected rows (indexes)\n  */\n  getSelectedIndex() {\n    const keys = Object.keys(this.model._attributes), l = keys.length, selected = [];\n    let i = 0;\n    for (i = 0; i < l; i++) {\n      if (keys[i].includes(\"row-\") && this.model._attributes[keys[i]] === true) {\n        selected.push(Number(keys[i].substring(4)));\n      }\n    }\n    return selected;\n  };\n\n /**\n  * Removes the models\n  * @param {Array} rows Models of the rows to remove\n  */\n  removeRows(rows) {\n    const l = rows.length;\n    let i = 0;\n    for (i = 0; i < l; i++) {\n      const model = rows[i];\n      //console.debug(\"Remove this model\", model);\n      if (!model.uri && this.uri) {\n        model.uri = this.uri + \"/\" + model.id;\n      }\n      this.collection.remove(model);\n      model.destroy();\n    }\n    this.refresh();\n    return l;\n  };\n\n  /**\n   * Removes the selected models\n   */\n  removeSelectedRows() {\n    return this.removeRows(this.getSelected());\n  };\n\n/**\n * Export the table data in requested format\n * @param {string} type The type requested (csv or html-default)\n * @returns {string} The table data in requested format\n */\n exportTo(type) {\n   let e = \"\";\n   if (type === \"csv\") {\n     e = csvTableCompile(this.name, this.description, this._columns, this.collection.toJSON());\n   } else if (type === \"tsv\") {\n     e = tsvTableCompile(this.name, this.description, this._columns, this.collection.toJSON());\n   } else {\n     // html\n     e = defaultTableCompile(this.name, this.description, this._columns, this.collection.toJSON(), false, null);\n   }\n   return e;\n };\n\n /* Private methods */\n\n /**\n  * @private\n  */\n  _bindCellChangeEvents() {\n    let myEl = (typeof this.el === 'string') ? this.el : this.el.localName;\n    let cells = [].slice.call(document.querySelectorAll(myEl + \" table tr td input\"));\n    let i=0, l=cells.length;\n    for(i=0; i < l; i++) {\n      cells[i].addEventListener(\"change\", this.saveCell.bind(this), false);\n    }\n    // bind the select boxes as well\n    cells = [].slice.call(document.querySelectorAll(myEl + \" table tr td select\"));\n    i=0;\n    l=cells.length;\n    for(i=0; i < l; i++) {\n      cells[i].addEventListener(\"change\", this.saveCell.bind(this), false);\n    }\n  };\n\n /**\n  * @private\n  */\n  _unbindCellChangeEvents() {\n    let myEl = (typeof this.el === 'string') ? this.el : this.el.localName;\n    let cells = [].slice.call(document.querySelectorAll(myEl + \" table tr td input\"));\n    let i=0, l=cells.length;\n    for(i=0; i < l; i++) {\n      cells[i].removeEventListener(\"change\", this.saveCell, false);\n    }\n    // unbind the select boxes as well\n    cells = [].slice.call(document.querySelectorAll(myEl + \" table tr td select\"));\n    i=0;\n    l=cells.length;\n    for(i=0; i < l; i++) {\n      cells[i].removeEventListener(\"change\", this.saveCell, false);\n    }\n  };\n\n /**\n  * @private\n  */\n  _unbindPaginationControlEvents() {\n    if (this.pageControlBound) {\n      let myEl = (typeof this.el === 'string') ? this.el : this.el.localName;\n      let first = document.querySelector(myEl + \" div.paginationControl span.first\");\n      let previous = document.querySelector(myEl + \" div.paginationControl span.previous\");\n      let next = document.querySelector(myEl + \" div.paginationControl span.next\");\n      let last = document.querySelector(myEl + \" div.paginationControl span.last\");\n      if (first) {\n        first.removeEventListener(\"click\", this.firstPage, false);\n      }\n      if (previous) {\n        previous.removeEventListener(\"click\", this.previousPage, false);\n      }\n      if (next) {\n        next.removeEventListener(\"click\", this.nextPage, false);\n      }\n      if (last) {\n        last.removeEventListener(\"click\", this.lastPage, false);\n      }\n      this.pageControlBound = false;\n    }\n  };\n\n /**\n  * @private\n  */\n  _bindPaginationControlEvents() {\n    if (!this.pageControlBound) {\n      let myEl = (typeof this.el === 'string') ? this.el : this.el.localName;\n      let first = document.querySelector(myEl + \" div.paginationControl span.first\");\n      let previous = document.querySelector(myEl + \" div.paginationControl span.previous\");\n      let next = document.querySelector(myEl + \" div.paginationControl span.next\");\n      let last = document.querySelector(myEl + \" div.paginationControl span.last\");\n      if (first) {\n        first.addEventListener(\"click\", this.firstPage.bind(this), false);\n      }\n      if (previous) {\n        previous.addEventListener(\"click\", this.previousPage.bind(this), false);\n      }\n      if (next) {\n        next.addEventListener(\"click\", this.nextPage.bind(this), false);\n      }\n      if (last) {\n        last.addEventListener(\"click\", this.lastPage.bind(this), false);\n      }\n      this.pageControlBound = true;\n    }\n  };\n\n /**\n  * @private\n  */\n  _deriveEventTarget(event) {\n    let key = null;\n    if (event) {\n      key = event.target.getAttribute(TABLE_DATA_ATTRIBUTES.NAME);\n    }\n    return key;\n  };\n\n /**\n  * @private\n  */\n  _sortByHeaderEvent(event) {\n    let key = this._deriveEventTarget(event);\n    this.sortBy(key);\n  };\n\n /**\n  * @private\n  */\n  _unbindSortableColumnEvents()  {\n    if (this.el && this.sortable) {\n      let list;\n      if (typeof this.el === 'string') {\n        list = document.querySelectorAll(this.el + \" table tr th\");\n      } else {\n        list = document.querySelectorAll(this.el.localName + \" table tr th\");\n      }\n      let i = 0, l = list.length;\n      for (i = 0; i < l; i++) {\n        list[i].removeEventListener(\"click\", this._sortByHeaderEvent, false);\n      }\n    }\n  };\n\n /**\n  * @private\n  */\n  _bindSortableColumnEvents()  {\n    if (this.el && this.sortable) {\n      let list;\n      if (typeof this.el === 'string') {\n        list = document.querySelectorAll(this.el + \" table tr th\");\n      } else {\n        list = document.querySelectorAll(this.el.localName + \" table tr th\");\n      }\n      let i = 0, l = list.length;\n      for (i = 0; i < l; i++) {\n        if (list[i].getAttribute(TABLE_DATA_ATTRIBUTES.NAME) === \"lineNumber\") {\n          // Do I need to do something?\n        } else {\n          list[i].addEventListener(\"click\", this._sortByHeaderEvent.bind(this), false);\n        }\n      }\n    }\n  };\n};\n\nexport default AutomaticTable;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","import AutomaticTable from \"./autoTable.js\";\nimport BigDataTable from \"./bigDataTable.js\";\nimport EditableBigDataTable from \"./editableBigTable.js\";\nimport EditableLocalStorageTable from \"./editableLocalStorageTable.js\";\nimport EditableTable from \"./editableTable.js\";\nimport LocalStorageTable from \"./localStorageTable.js\";\nimport Spreadsheet from \"./spreadsheet.js\";\n\nmodule.exports.AutomaticTable = AutomaticTable;\nmodule.exports.BigDataTable = BigDataTable;\nmodule.exports.EditableBigDataTable = EditableBigDataTable;\nmodule.exports.EditableLocalStorageTable = EditableLocalStorageTable;\nmodule.exports.EditableTable = EditableTable;\nmodule.exports.LocalStorageTable = LocalStorageTable;\nmodule.exports.Spreadsheet = Spreadsheet;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","// Tables and Grids\n\nexport const TABLE_DATA_ATTRIBUTES = {\n  \"NAME\":           \"data-name\",\n  \"TYPE\":           \"data-type\",\n  \"DESCRIPTION\":    \"data-description\",\n  \"INDEX\":          \"data-index\",\n  \"LABEL\":          \"data-label\",\n  \"SORT_CLASS\":      \"sorted\"\n};\n\nexport const csvTableCompile = (name, desc, columns, data, del) => {\n  let csv = \"\";\n  if (!del) {\n    del = \",\";\n  }\n  if (columns) {\n    let key, obj;\n    for (key in columns) {\n      if (columns.hasOwnProperty(key)) {\n        obj = columns[key];\n        csv = csv + key + del;\n      }\n    }\n    csv = csv.slice(0, -1);\n    csv = csv + \"\\n\";\n  }\n\n  let i, d, dkey, dobj, t;\n  const l = data.length;\n  for (i = 0; i < l; i++) {\n    d = data[i];\n    for (dkey in d) {\n      if (d.hasOwnProperty(dkey)) {\n        dobj = d[dkey];\n        t = (typeof dobj);\n        csv = csv + dobj + del;\n      }\n    }\n    csv = csv.slice(0, -1);\n    csv = csv + \"\\n\";\n  }\n  return csv;\n};\n\nexport const tsvTableCompile = (name, desc, columns, data) => {\n  return csvTableCompile(name, desc, columns, data, \"\\t\");\n};\n\nexport const defaultTableCompile = (name, desc, columns, data, lineNumbers, sortKey, editable, display) => {\n  let html = `<table ${TABLE_DATA_ATTRIBUTES.NAME}=\"${name}\" ${TABLE_DATA_ATTRIBUTES.DESCRIPTION}=\"${desc}\">`;\n  if (name) {\n    html = html + \"<caption\";\n    if (desc) {\n      html = html + ` title=\"${desc}\"`;\n    }\n    html = html + `>${name}</caption>`;\n  }\n  html = html + \"<thead>\";\n  html = html + defaultTableHeader(columns, lineNumbers, sortKey, display);\n  html = html + \"</thead><tbody>\";\n  if (data) {\n    if (editable) {\n      html = html + editableTableBody(data, columns, lineNumbers, sortKey, display);\n    } else {\n      html = html + defaultTableBody(data, columns, lineNumbers, sortKey, display);\n    }\n  }\n  html = html + \"</tbody></table>\";\n  return html;\n};\n\nexport const defaultTableHeader = (columns, lineNumbers, sortKey, display) => {\n  let html = \"\";\n  if (columns) {\n    html = html + \"<tr>\";\n    if (lineNumbers) {\n      html = html + `<th ${TABLE_DATA_ATTRIBUTES.NAME}=\"lineNumber\">#</th>`;\n    }\n    let key, obj;\n    for (key in columns) {\n      if (columns.hasOwnProperty(key)) {\n        obj = columns[key];\n        html = html + `<th ${TABLE_DATA_ATTRIBUTES.NAME}=\"${key}\" ${TABLE_DATA_ATTRIBUTES.DESCRIPTION}=\"${obj.description}\" ${TABLE_DATA_ATTRIBUTES.TYPE}=\"${obj.type}\"`;\n        if (sortKey === key) {\n          html = html + \" class=\\\"\" + TABLE_DATA_ATTRIBUTES.SORT_CLASS + \"\\\"\";\n        }\n        html = html + \">\" + key + \"</th>\";\n      }\n    }\n    html = html + \"</tr>\";\n  }\n  return html;\n};\n\nexport const defaultTableBody = (data, columns, lineNumbers, sortKey, display) => {\n  let i, d, dkey, dobj, html = \"\", l = data.length, t;\n  for (i = 0; i < l; i++) {\n    d = data[i];\n    html = html + \"<tr>\";\n    if (lineNumbers) {\n      html = html + \"<td class=\\\"label number\\\">\" + (i+1) + \"</td>\";\n    }\n    for (dkey in d) {\n      if (d.hasOwnProperty(dkey)) {\n        dobj = d[dkey];\n        t = (typeof dobj);\n        html = html + \"<td \" + TABLE_DATA_ATTRIBUTES.TYPE + \"=\\\"\" + t + \"\\\" class=\\\"\" + t;\n        if (sortKey === dkey) {\n          html = html + \" \" + TABLE_DATA_ATTRIBUTES.SORT_CLASS;\n        }\n        html = html + \"\\\">\" + dobj + \"</td>\";\n      }\n    }\n    html = html + \"</tr>\";\n  }\n  return html;\n};\n\nexport const directDOMTableCompile = (el, name, desc, columns, data, lineNumbers, sortKey, editable, display, selectable, linkable, linksConfig, linkCallback, isMaterial) => {\n  const table = document.createElement(\"table\"), thead = document.createElement(\"thead\"), tbody = document.createElement(\"tbody\");\n  let n, t;\n\n  // Binding\n  table.setAttribute(\"data-\" + name, name);\n\n  table.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, name);\n  table.setAttribute(TABLE_DATA_ATTRIBUTES.DESCRIPTION, desc);\n  if (desc) {\n    n = document.createElement(\"caption\");\n    if (name) {\n      n.setAttribute(\"title\", name);\n    }\n    t = document.createTextNode(desc);\n    n.appendChild(t);\n    table.appendChild(n);\n  }\n  directDOMTableHeader(thead, columns, lineNumbers, sortKey, display, selectable, isMaterial);\n  table.appendChild(thead);\n  table.appendChild(tbody);\n  if (data) {\n    if (editable) {\n      directDOMEditableTableBody(tbody, data, columns, lineNumbers, sortKey, display, selectable, name, linkable, linksConfig, linkCallback);\n    } else {\n      directDOMTableBody(tbody, data, columns, lineNumbers, sortKey, display, selectable, name, linkable, linksConfig, linkCallback);\n    }\n  }\n  el.appendChild(table);\n};\n\nexport const directDOMTableHeader = (el, columns, lineNumbers, sortKey, display, selectable, isMaterial) => {\n  if (columns && el) {\n    const tr = document.createElement(\"tr\");\n    let n, t, key, obj;\n    if (selectable) {\n      n = document.createElement(\"th\");\n      n.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, \"select\");\n      if (isMaterial) {\n        n.innerHTML = `<i class=\"material-icons\">check_box_outline_blank</i>`;\n      } else {\n        t = document.createTextNode(\"\\u274f\");\n        n.appendChild(t);\n      }\n      tr.appendChild(n);\n    }\n\n    if (lineNumbers) {\n      n = document.createElement(\"th\");\n      n.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, \"lineNumber\");\n      t = document.createTextNode(\"#\");\n      n.appendChild(t);\n      tr.appendChild(n);\n    }\n\n    for (key in columns) {\n      let displayCol = true;\n      if (display !== null) {\n          displayCol = (display.indexOf(key) !== -1);\n      }\n\n      if (displayCol && columns.hasOwnProperty(key)) {\n        obj = columns[key];\n\n        n = document.createElement(\"th\");\n        n.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, key);\n        n.setAttribute(TABLE_DATA_ATTRIBUTES.DESCRIPTION, obj.description);\n        n.setAttribute(TABLE_DATA_ATTRIBUTES.TYPE, obj.type);\n        if (sortKey === key) {\n          n.classList.add(TABLE_DATA_ATTRIBUTES.SORT_CLASS);\n        }\n\n        t = document.createTextNode(key);\n        n.appendChild(t);\n        tr.appendChild(n);\n      }\n    }\n    el.appendChild(tr);\n  }\n};\n\nexport const directDOMTableBody = (el, data, columns, lineNumbers, sortKey, display, selectable, name, linkable, linksConfig, linkCallback) => {\n  const l = data.length;\n  let i, d, dkey, dobj, t, td, tn, tr, cobj;\n\n  for (i = 0; i < l; i++) {\n    d = data[i];\n    tr = document.createElement(\"tr\");\n\n    if (selectable) {\n      td = document.createElement(\"td\");\n      td.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, \"select\");\n      tn = document.createElement(\"input\");\n      tn.type = \"checkbox\";\n      tn.name = String(i);\n      tn.value = String(i);\n      // Binding\n      tn.setAttribute(\"data-\" + name, \"row-\" + i);\n\n      td.appendChild(tn);\n      td.classList.add(\"label\", \"select\");\n      tr.appendChild(td);\n    }\n\n    if (lineNumbers) {\n      td = document.createElement(\"td\");\n      tn = document.createTextNode(String(i + 1));\n      td.appendChild(tn);\n      td.classList.add(\"label\", \"number\");\n      tr.appendChild(td);\n    }\n    for (dkey in columns) {\n      let displayCol = true;\n      if (display !== null) {\n          displayCol = (display.indexOf(dkey) !== -1);\n      }\n      if (displayCol && d.hasOwnProperty(dkey)) {\n        dobj = d[dkey];\n        t = (typeof dobj);\n        td = document.createElement(\"td\");\n        tn = document.createTextNode(dobj);\n\n        if (linkable && linksConfig && linkCallback &&\n            ((linksConfig.column === dkey) || (linksConfig.wholeRow)) ) {\n          const a = document.createElement(\"a\");\n          //a.title = \"my title text\";\n          a.href = linkCallback(d);\n          a.appendChild(tn);\n          td.appendChild(a);\n        } else {\n          td.appendChild(tn);\n        }\n\n        td.classList.add(t);\n        if (sortKey === dkey) {\n          td.classList.add(TABLE_DATA_ATTRIBUTES.SORT_CLASS);\n        }\n        td.setAttribute(TABLE_DATA_ATTRIBUTES.TYPE, t);\n        td.setAttribute(TABLE_DATA_ATTRIBUTES.LABEL, dkey);\n        tr.appendChild(td);\n      }\n    }\n    el.appendChild(tr);\n  }\n};\n\nexport const directDOMEditableTableBody = (el, data, columns, lineNumbers, sortKey, display, selectable, name) => {\n  const l = data.length, ln = lineNumbers;\n  let i, d, dkey, dobj, t, td, tn, tr, input, cobj;\n  for (i = 0; i < l; i++) {\n    d = data[i];\n    tr = document.createElement(\"tr\");\n\n    if (selectable) {\n      td = document.createElement(\"td\");\n      td.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, \"select\");\n      tn = document.createElement(\"input\");\n      tn.type = \"checkbox\";\n      tn.name = String(i);\n      tn.value = String(i);\n      td.appendChild(tn);\n      td.classList.add(\"label\", \"select\");\n      tr.appendChild(td);\n    }\n\n    if (ln) {\n      td = document.createElement(\"td\");\n      tn = document.createTextNode(String(i + 1));\n      td.appendChild(tn);\n      td.classList.add(\"label\", \"number\");\n      tr.appendChild(td);\n    }\n\n    for (dkey in d) {\n      let displayCol = true;\n      if (display !== null) {\n          displayCol = (display.indexOf(dkey) !== -1);\n      }\n\n      if (displayCol && d.hasOwnProperty(dkey)) {\n        cobj = (columns[dkey]) ? columns[dkey] : {};\n        dobj = d[dkey];\n\n        t = (typeof dobj);\n\n        td = document.createElement(\"td\");\n        td.classList.add(t);\n        if (sortKey === dkey) {\n          td.classList.add(TABLE_DATA_ATTRIBUTES.SORT_CLASS);\n        }\n        td.setAttribute(TABLE_DATA_ATTRIBUTES.TYPE, t);\n        td.setAttribute(TABLE_DATA_ATTRIBUTES.LABEL, dkey);\n        // input field\n\n        if (t === \"object\") {\n          if (Array.isArray(dobj)) {\n            let iii = 0, lll = dobj.length, option, tOption;\n            input = document.createElement(\"select\");\n            for (iii = 0; iii < lll; iii++) {\n              option = document.createElement(\"option\");\n              option.setAttribute(\"value\", dobj[iii]);\n              tOption = document.createTextNode(dobj[iii]);\n              option.appendChild(tOption);\n              input.appendChild(option);\n            }\n          } else {\n            input = document.createElement(\"textarea\");\n            input.value = JSON.stringify(dobj);\n          }\n        } else if (t === \"boolean\") {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"checkbox\");\n          if (dobj === true) {\n            input.setAttribute(\"checked\", \"checked\");\n          }\n          input.value = dobj;\n        } else if (t === \"number\") {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"number\");\n          input.value = dobj;\n        } else if (t === \"string\" && cobj.enum) {\n          input = document.createElement(\"select\");\n          let iiii = 0, llll = cobj.enum.length, option2, tOption2;\n          for (iiii = 0; iiii < llll; iiii++) {\n            option2 = document.createElement(\"option\");\n            option2.setAttribute(\"value\", cobj.enum[iiii]);\n            tOption2 = document.createTextNode(cobj.enum[iiii]);\n            if (dobj === cobj.enum[iiii]) {\n              option2.setAttribute(\"selected\", \"selected\");\n            }\n            option2.appendChild(tOption2);\n            input.appendChild(option2);\n          }\n        } else if (t === \"string\" && (cobj.format === \"email\")) {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"email\");\n          input.value = dobj;\n        } else if (t === \"string\" && (cobj.format === \"uri\")) {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"url\");\n          input.value = dobj;\n        } else if (t === \"string\" && (cobj.format === \"date-time\")) {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"datetime\");\n          input.value = dobj;\n        } else {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"text\");\n          input.value = dobj;\n        }\n\n        if (t === \"string\" && cobj.pattern) {\n          input.setAttribute(\"pattern\", cobj.pattern);\n        }\n\n        if (cobj.minimum) {\n          input.setAttribute(\"min\", cobj.minimum);\n        }\n\n        if (cobj.maximum) {\n          input.setAttribute(\"max\", cobj.maximum);\n        }\n\n        if (t === \"string\" && cobj.minlength) {\n          input.setAttribute(\"minlength\", cobj.minlength);\n        }\n\n        if (t === \"string\" && cobj.maxlength) {\n          input.setAttribute(\"maxlength\", cobj.maxlength);\n        }\n\n        input.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, dkey);\n        input.setAttribute(TABLE_DATA_ATTRIBUTES.INDEX, i);\n\n        // Binding\n        input.setAttribute(\"data-\" + name, name);\n\n        td.appendChild(input);\n\n        tr.appendChild(td);\n      }\n    }\n    el.appendChild(tr);\n  }\n};\n\n/*\n* << First | < Previous | # | Next > | Last >>\n*/\nexport const directDOMPaginationControl = (el, currentPage, totalPages) => {\n  let d, n, t;\n  d = document.createElement(\"div\");\n  d.classList.add(\"paginationControl\");\n\n  n = document.createElement(\"span\");\n  n.classList.add(\"first\");\n  t = document.createTextNode(\"<< First\");\n  n.appendChild(t);\n  d.appendChild(n);\n\n  n = document.createElement(\"span\");\n  n.classList.add(\"previous\");\n  t = document.createTextNode(\"< Previous\");\n  n.appendChild(t);\n  d.appendChild(n);\n\n  n = document.createElement(\"span\");\n  n.classList.add(\"current\");\n  t = document.createTextNode(`${currentPage} of ${totalPages}`);\n  n.appendChild(t);\n  d.appendChild(n);\n\n  n = document.createElement(\"span\");\n  n.classList.add(\"next\");\n  t = document.createTextNode(\"Next >\");\n  n.appendChild(t);\n  d.appendChild(n);\n\n  n = document.createElement(\"span\");\n  n.classList.add(\"last\");\n  t = document.createTextNode(\"Last >>\");\n  n.appendChild(t);\n  d.appendChild(n);\n\n  el.appendChild(d);\n};\n","const formatValidationMessages = (messages) => {\n  let html = \"\";\n  if (messages && messages.length > 0) {\n    html = html + \"<ul class=\\\"errors\\\">\";\n    const l = messages.length;\n    let i = 0, ii = 0;\n    for (i = 0; i < l; i++) {\n      const ll = messages[i].errors.length;\n      for (ii = 0; ii < ll; ii++) {\n        html = html + \"<li>\" + messages[i].errors[ii] + \"</li>\";\n      }\n    }\n    html = html + \"</ul>\";\n  }\n  return html;\n};\n\nexport default formatValidationMessages;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;","import AutomaticTable from \"./autoTable.js\";\n\n/**\n * Instance class preconfigured for sorting and pagination\n * @extends AutomaticTable\n * @memberof Component\n */\nclass BigDataTable extends AutomaticTable {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    options.lineNumbers = true;\n    options.sortable = true;\n    super(options);\n    this.renderPaginationControl = true;\n  };\n};\n\nexport default BigDataTable;\n","import AutomaticTable from \"./autoTable.js\";\n\n/**\n * Instance class preconfigured for sorting and pagination\n * @extends AutomaticTable\n * @memberof Component\n */\nclass EditableBigDataTable extends AutomaticTable {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    options.lineNumbers = true;\n    options.sortable = true;\n    options.editable = true;\n    super(options);\n    this.renderPaginationControl = true;\n  };\n};\n\nexport default EditableBigDataTable;\n","import AutomaticTable from \"./autoTable.js\";\n\n/**\n* Instance class preconfigured for editing, sorting, from local storage\n* @extends AutomaticTable\n* @memberof Component\n*/\nclass EditableLocalStorageTable extends AutomaticTable {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    options.lineNumbers = true;\n    options.sortable = true;\n    options.editable = true;\n    options.localStorage = true;\n    super(options);\n    this.renderPaginationControl = true;\n  };\n};\n\nexport default EditableLocalStorageTable;\n","import AutomaticTable from \"./autoTable.js\";\n\n/**\n * Instance class preconfigured for editing\n * @extends AutomaticTable\n * @memberof Component\n */\nclass EditableTable extends AutomaticTable {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    options.lineNumbers = true;\n    options.editable = true;\n    super(options);\n  };\n};\n\nexport default EditableTable;\n","import AutomaticTable from \"./autoTable.js\";\n\n/**\n* Instance class preconfigured for local storage-based table\n* @extends AutomaticTable\n* @memberof Component\n*/\nclass LocalStorageTable extends AutomaticTable {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    options.lineNumbers = true;\n    options.sortable = true;\n    options.editable = false;\n    options.localStorage = true;\n    super(options);\n    this.renderPaginationControl = true;\n  };\n};\n\nexport default LocalStorageTable;\n","import { isObject } from \"next-core-utilities\";\nimport AutomaticTable from \"./autoTable.js\";\nimport { Collection, LocalStorageCollection } from \"presentation-models\";\n\n/**\n * Instance class preconfigured for editing for use as a Spreadsheet.<br/>\n * If a propery for length is not specified, it will buffer 10 lines for editing.\n * @extends AutomaticTable\n * @memberof Component\n */\nclass Spreadsheet extends AutomaticTable {\n  constructor(options) {\n    super(options);\n    // TODO: overrides?\n    this.lineNumbers = true;\n    this.sortable = true;\n    this.editable = true;\n\n    if (options && options.pagination) {\n      this.renderPaginationControl = options.pagination;\n    } else {\n      this.renderPaginationControl = false;\n    }\n\n    if (options && options.rows) {\n      this.rows = options.rows;\n    } else {\n      this.rows = 10;\n    }\n\n    if (options && options.columns) {\n      this.columns = options.columns;\n    } else {\n      this.rows = 5;\n    }\n\n    if (this.collection) {\n      this.collection.reset();\n    } else if (!this.collection && this.localStorage) {\n      this.collection = new LocalStorageCollection();\n    } else if (!this.collection) {\n      this.collection = new Collection();\n    }\n\n    // TODO: this might belong in parent\n\n    if (options) {\n      if (options.schema) {\n        // check if this is a schema vs a URI to get a schema\n        if (isObject(options.schema)) {\n          this.schema = options.schema;\n        } else {\n          // is a URI?\n          let parsedSchema = null;\n          try {\n            parsedSchema = JSON.parse(options.schema);\n            if (parsedSchema && isObject(parsedSchema)) {\n              this.schema = parsedSchema;\n            }\n          } catch(e) {\n            // AutoTable parsing string schema failed.  URI perhaps?\n            //_logger.warn(\"AUGMENTED: AutoTable parsing string schema failed.  URI perhaps?\");\n          }\n          if (!this.schema) {\n            this.retrieveSchema(options.schema);\n            this.isInitalized = false;\n            //return false;\n          }\n        }\n      }\n\n      if (options.el) {\n        this.el = options.el;\n      }\n\n      if (options.uri) {\n        this.uri = options.uri;\n        this.collection.url = options.uri;\n      }\n\n      if (options.data && (Array.isArray(options.data))) {\n        this.populate(options.data);\n      }\n\n      if (options.sortable) {\n        this.sortable = options.sortable;\n      }\n\n      if (options.lineNumbers) {\n        this.lineNumbers = options.lineNumbers;\n      }\n\n      if (options.localStorageKey && !options.uri) {\n        this.localStorageKey = options.localStorageKey;\n        this.uri = null;\n      }\n    }\n\n    if (this.collection && this.uri) {\n      this.collection.url = this.uri;\n    }\n    if (this.collection) {\n      this.collection.crossOrigin = this.crossOrigin;\n    }\n    if (this.schema) {\n      if ((!this.name || this.name === \"\") && this.schema.title) {\n        this.name = this.schema.title;\n      }\n      if ((!this.description || this.description === \"\") && this.schema.description) {\n        this.description = this.schema.description;\n      }\n\n      if (!this.isInitalized) {\n        this._columns = this.schema.properties;\n        this.collection.schema = this.schema;\n      }\n    } else {\n      //very basic schema\n      this.schema = {\n        \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n        \"title\": \"untitled\",\n        \"type\": \"object\",\n        \"description\": \"\",\n        \"properties\": {\n        }\n      };\n\n      let i = 0;\n\n      for (i = 0; i < this.columns; i++) {\n        this.schema.properties[String.fromCharCode(65 + i)] = {\n          \"description\": \"\",\n          \"type\": \"string\"\n        };\n      }\n\n      this._columns = this.schema.properties;\n      this.collection.schema = this.schema;\n    }\n\n    //buffer\n    this._generate();\n    this.collection.set(this.data);\n\n    this.isInitalized = true;\n  };\n\n  /**\n   * @propery {number} columns Defines a set of columns in the spreadsheet\n   * @memberof Spreadsheet\n   */\n\n  /**\n   * @propery {number} rows Defines a set of rows in the spreadsheet\n   * @memberof Spreadsheet\n   */\n\n  _generate() {\n    if (this.schema && this.schema.properties) {\n      let i = 0, ii = 0, keys = Object.keys(this.schema.properties), l = keys.length, obj = {};\n      this.data = [];\n      for (ii = 0; ii < this.rows; ii++) {\n        obj = {};\n        for (i = 0; i < l; i++) {\n          obj[keys[i]] = \"\";\n        }\n        this.data.push(obj);\n      }\n    }\n  }\n};\n\nexport default Spreadsheet;\n"],"sourceRoot":""}