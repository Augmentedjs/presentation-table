{"version":3,"sources":["webpack://presentation-table/webpack/universalModuleDefinition","webpack://presentation-table/webpack/bootstrap","webpack://presentation-table/./src/autoTable.js","webpack://presentation-table/external {\"commonjs\":\"augmentedjs-next\",\"commonjs2\":\"augmentedjs-next\",\"amd\":\"augmentedjs-next\",\"root\":\"Augmented\"}","webpack://presentation-table/external {\"commonjs\":\"presentation-models\",\"commonjs2\":\"presentation-models\",\"amd\":\"presentation-models\",\"root\":\"presentation-models\"}","webpack://presentation-table/./src/index.js","webpack://presentation-table/external {\"commonjs\":\"presentation-decorator\",\"commonjs2\":\"presentation-decorator\",\"amd\":\"presentation-decorator\",\"root\":\"presentation-decorator\"}","webpack://presentation-table/./src/functions/buildTable.js","webpack://presentation-table/./src/functions/messages.js","webpack://presentation-table/external {\"commonjs\":\"presentation-request\",\"commonjs2\":\"presentation-request\",\"amd\":\"presentation-request\",\"root\":\"presentation-request\"}","webpack://presentation-table/external {\"commonjs\":\"presentation-dom\",\"commonjs2\":\"presentation-dom\",\"amd\":\"presentation-dom\",\"root\":\"presentation-dom\"}","webpack://presentation-table/./src/bigDataTable.js","webpack://presentation-table/./src/editableBigTable.js","webpack://presentation-table/./src/editableLocalStorageTable.js","webpack://presentation-table/./src/editableTable.js","webpack://presentation-table/./src/localStorageTable.js","webpack://presentation-table/./src/spreadsheet.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__8__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Augmented","_presentationDecorator","_buildTable","_presentationRequest","_presentationModels","DEFAULT_KEY","DEFAULT_SORT_TYPE","DEFAULT_THEME","DecoratorView","constructor","super","options","style","theme","linkable","links","wholeRow","column","link","selectable","sortable","sortStyle","sortKey","display","pagination","renderPaginationControl","paginationAPI","description","localStorage","localStorageKey","editable","crossOrigin","lineNumbers","uri","data","_columns","isInitalized","pageControlBound","model","Model","collection","reset","LocalStorageCollection","Collection","schema","parsedSchema","JSON","e","retrieveSchema","Array","populate","title","split","join","properties","setTheme","el","Dom","rowLink","sortBy","sortByKey","refresh","currentPage","totalPages","nextPage","previousPage","goToPage","page","firstPage","lastPage","editCell","row","col","at","columns","copyCell","row1","col2","model1","name1","col1","model2","clearCell","render","template","showProgressBar","document","tbody","thead","_unbindSortableColumnEvents","_unbindCellChangeEvents","hasChildNodes","directDOMTableHeader","length","directDOMEditableTableBody","toJSON","directDOMTableBody","directDOMTableCompile","directDOMPaginationControl","_bindPaginationControlEvents","delegateEvents","_bindSortableColumnEvents","_bindCellChangeEvents","that","request","url","contentType","dataType","success","status","error","showMessage","fetch","view","console","save","override","successHandler","failHandler","source","clear","saveCell","event","target","parseInt","TABLE_DATA_ATTRIBUTES","INDEX","myEl","localName","cells","slice","exportTo","type","csvTableCompile","tsvTableCompile","defaultTableCompile","_unbindPaginationControlEvents","first","previous","next","last","_deriveEventTarget","_sortByHeaderEvent","list","compileTemplate","setURI","setSchema","show","validate","messages","isValid","_messages2","default","remove","undelegateEvents","off","stopListening","getSelected","keys","attributes","selected","Number","getSelectedIndex","removeRows","rows","AutomaticTable","BigDataTable","EditableBigDataTable","EditableLocalStorageTable","EditableTable","LocalStorageTable","Spreadsheet","NAME","TYPE","DESCRIPTION","LABEL","SORT_CLASS","desc","del","dkey","dobj","csv","obj","defaultTableHeader","html","editableTableBody","defaultTableBody","linksConfig","linkCallback","table","tr","displayCol","td","tn","String","a","ln","input","cobj","option","tOption","iii","lll","enum","option2","tOption2","iiii","llll","pattern","minimum","maximum","minlength","maxlength","ii","ll","$schema","_generate","set","push"],"mappings":"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","file":"presentation-table.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"augmentedjs-next\"), require(\"presentation-models\"), require(\"presentation-decorator\"), require(\"presentation-request\"), require(\"presentation-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"presentation-table\", [\"augmentedjs-next\", \"presentation-models\", \"presentation-decorator\", \"presentation-request\", \"presentation-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"presentation-table\"] = factory(require(\"augmentedjs-next\"), require(\"presentation-models\"), require(\"presentation-decorator\"), require(\"presentation-request\"), require(\"presentation-dom\"));\n\telse\n\t\troot[\"presentation-table\"] = factory(root[\"Augmented\"], root[\"presentation-models\"], root[\"presentation-decorator\"], root[\"presentation-request\"], root[\"presentation-dom\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__7__, __WEBPACK_EXTERNAL_MODULE__8__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import * as Augmented from \"augmentedjs-next\";\nimport { DecoratorView } from \"presentation-decorator\";\nimport { TABLE_DATA_ATTRIBUTES, csvTableCompile, tsvTableCompile, defaultTableCompile, directDOMTableCompile, directDOMTableHeader, directDOMTableBody, directDOMEditableTableBody, directDOMPaginationControl } from \"./functions/buildTable.js\";\nimport formatValidationMessages from \"./functions/messages.js\";\nimport { request } from \"presentation-request\";\nimport Dom from \"presentation-dom\";\nimport { Model, Collection, LocalStorageCollection } from \"presentation-models\";\n\nconst DEFAULT_KEY = \"augmented.localstorage.autotable.key\";\nconst DEFAULT_SORT_TYPE = \"client\";\nconst DEFAULT_THEME = \"material\";\n\n/**\n * AutomaticTable<br/>\n * Creates a table automatically via a schema for defintion and a uri/json for data\n * @extends DecoratorView\n * @memberof Component\n * @example\n * const at = new AutomaticTable({\n *     schema: schema,\n *     el: \"#autoTable\",\n *     crossOrigin: false,\n *     sortable: true,\n *     lineNumbers: true,\n *     editable: true,\n *     uri: \"/example/data/table.json\"\n * });\n */\nclass AutomaticTable extends DecoratorView {\n  constructor(options) {\n    super(options);\n\n    const style = (this.style) ? this.style + \" \" : \"\";\n\n    if (options && options.theme) {\n      this.theme = `${style}${options.theme}`;\n    } else {\n      this.theme = `${style}${DEFAULT_THEME}`;\n    }\n\n    if (options && options.linkable) {\n      this.linkable = options.linkable;\n    } else {\n      this.linkable = false;\n    }\n\n    if (options && options.links) {\n      this.links = options.links;\n    } else {\n      this.links = {\n        wholeRow: true,\n        column: \"\",\n        link: \"rowLink\"\n      };\n    }\n\n    if (options && options.selectable) {\n      this.selectable = options.selectable;\n    } else {\n      this.selectable = false;\n    }\n\n    if (options && options.sortable) {\n      this.sortable = options.sortable;\n    } else {\n      this.sortable = false;\n    }\n\n    if (options && options.sortStyle) {\n      this.sortStyle = options.sortStyle;\n    } else {\n      this.sortStyle = DEFAULT_SORT_TYPE;\n    }\n\n    if (options && options.sortKey) {\n      this.sortKey = options.sortKey;\n    } else {\n      this.sortKey = null;\n    }\n\n    if (options && options.display) {\n      this.display = options.display;\n    } else {\n      this.display = null;\n    }\n\n    if (options && options.pagination) {\n      this.renderPaginationControl = options.pagination;\n    } else {\n      this.renderPaginationControl = false;\n    }\n\n    if (options && options.paginationAPI) {\n      this.paginationAPI = options.paginationAPI;\n    } else {\n      this.paginationAPI = null;\n    }\n\n    if (options && options.description) {\n      this.description = options.description;\n    } else {\n      this.description = \"\";\n    }\n\n    if (options && options.localStorage) {\n      this.localStorage = options.localStorage;\n    } else {\n      this.localStorage = false;\n    }\n\n    if (options && options.localStorageKey) {\n      this.localStorageKey = options.localStorageKey;\n    } else {\n      this.localStorageKey = DEFAULT_KEY;\n    }\n\n    if (options && options.editable) {\n      this.editable = options.editable;\n    } else {\n      this.editable = false;\n    }\n\n    if (options && options.crossOrigin) {\n      this.crossOrigin = options.crossOrigin;\n    } else {\n      this.crossOrigin = false;\n    }\n\n    if (options && options.lineNumbers) {\n      this.lineNumbers = options.lineNumbers;\n    } else {\n      this.lineNumbers = false;\n    }\n\n    if (options && options.uri) {\n      this.uri = options.uri;\n    } else {\n      this.uri = false;\n    }\n\n    if (options && options.data) {\n      this.data = options.data;\n    } else {\n      this.data = [];\n    }\n\n    this._columns = {};\n    this.isInitalized = false;\n    this.pageControlBound = false;\n\n    if (!this.model) {\n      this.model = new Model();\n    }\n\n    if (this.collection) {\n      this.collection.reset();\n    }\n\n    if (!this.collection && this.paginationAPI) {\n      this.collection = Augmented.PaginationFactory.getPaginatedCollection(this.paginationAPI);\n      this.paginationAPI = this.collection.paginationAPI;\n      this.localStorage = false;\n    } else if (!this.collection && this.localStorage) {\n      this.collection = new LocalStorageCollection();\n    } else if (!this.collection) {\n      this.collection = new Collection();\n    }\n\n    if (options && options.schema) {\n      // check if this is a schema vs a URI to get a schema\n      if (Augmented.isObject(options.schema)) {\n        this.schema = options.schema;\n      } else {\n        // is a URI?\n        let parsedSchema = null;\n        try {\n          parsedSchema = JSON.parse(options.schema);\n          if (parsedSchema && Augmented.isObject(parsedSchema)) {\n            this.schema = parsedSchema;\n          }\n        } catch(e) {\n          //_logger.warn(\"AUGMENTED: AutoTable parsing string schema failed.  URI perhaps?\");\n        }\n        if (!this.schema) {\n          this.retrieveSchema(options.schema);\n          this.isInitalized = false;\n        }\n      }\n    } else {\n      this.schema = null;\n    }\n\n    if (this.uri && this.collection) {\n      this.collection.uri = options.uri;\n    }\n\n    if (this.data && (Array.isArray(this.data))) {\n      this.populate(this.data);\n    }\n\n    if (options && options.localStorageKey && !options.uri) {\n      this.localStorageKey = options.localStorageKey;\n      this.uri = null;\n    }\n\n    if (this.collection && this.uri) {\n      this.collection.uri = this.uri;\n    }\n    if (this.collection) {\n      this.collection.crossOrigin = this.crossOrigin;\n    }\n\n    if (this.schema) {\n      if ((!this.name || this.name === \"\") && this.schema.title) {\n        this.name = this.schema.title;\n        this.name.split(\" \").join(\"\");\n      }\n\n      if ((!this.description || this.description === \"\") && this.schema.description) {\n        this.description = this.schema.description;\n      }\n\n      if (!this.isInitalized) {\n        this._columns = this.schema.properties;\n        this.collection.schema = this.schema;\n        this.isInitalized = true;\n      }\n    } else {\n      this.isInitalized = false;\n    }\n  };\n\n  /**\n   * The theme property - The theme of this table (default is 'material')\n   * @property {string} theme The theme of this table\n   */\n\n /**\n  * The linkable property - enable links in a row (only works in non-editable tables)\n  * @property {boolean} linkable enable/disable linking a row\n  */\n\n  /**\n   * The selectable property - enable selecting a row in table\n   * @property {boolean} selectable enable/disable selecting a row\n   */\n\n  /**\n   * The sortable property - enable sorting in table\n   * @property {boolean} sortable enable sorting in the table\n   */\n\n  /**\n   * The sortStyle property - setup the sort API\n   * @property {string} sortStyle setup the sort API\n   */\n\n  /**\n   * The sortKey property\n   * @property {string} sortKey sorted key\n   * @private\n   */\n\n  /**\n   * The links property - setup linking structure for links in a row\n   * @property {boolean} linkable enable/disable linking a row\n   * @example links: {\n   * wholeRow: false, // link whole row vs column\n   * column: \"name\", // name of column\n   *\tlink: \"rowLink\" // callback\n   * }\n   */\n\n  /**\n   * The localStorage property - enables localStorage\n   * @property {boolean} localStorage The localStorage property\n   */\n\n  /**\n   * The localStorageKey property - set the key for use in storage\n   * @property {string} localStorageKey The localStorage key property\n   */\n\n  /**\n   * The editable property - enables editing of cells\n   * @property {boolean} editable The editable property\n   */\n\n /**\n  * Fields to display - null will display all\n  * @property {array} display Fields to display\n  */\n\n  // pagination\n /**\n  * The renderPaginationControl property - render the pagination control\n  * @property {boolean} renderPaginationControl render the pagination control\n  */\n\n /**\n  * The paginationAPI property - setup the paginatin API to use\n  * @property {Augmented.PaginationFactory.type} paginationAPI the pagination API to use\n  */\n\n /**\n  * The name property\n  * @property {string} name The name of the table\n  */\n\n /**\n  * The description property\n  * @property {string} description The description of the table\n  */\n\n  /**\n   * The crossOrigin property - enables cross origin fetch\n   * @property {boolean} crossOrigin The crossOrigin property\n   */\n\n  /**\n   * The lineNumber property - turns on line numbers\n   * @property {boolean} lineNumbers The lineNumbers property\n   */\n\n  /**\n   * The columns property\n   * @property {object} columns The columns property\n   * @private\n   */\n\n  /**\n   * The URI property\n   * @property {string} uri The URI property\n   */\n\n  /**\n   * The data property\n   * @property {array} data The data property\n   * @private\n   */\n\n  /**\n   * The collection property\n   * @property {Augmented.PaginatedCollection} collection The collection property\n   * @private\n   */\n\n  /**\n   * The initialized property\n   * @property {boolean} isInitalized The initialized property\n   */\n\n  /**\n   * The theme of the table\n   * @param {string} theme name of the theme\n   */\n   setTheme(theme) {\n     const el = Dom.selector(this.el);//((typeof this.el === 'string') ? document.querySelector(this.el) : this.el),\n     if (el) {\n       let e = el.querySelector(\"table\");\n       if (e) {\n         e.setAttribute(\"class\", theme);\n       }\n     }\n     this.theme = theme;\n   };\n\n  /**\n   * The default rowlink function callback called by row to format a link\n   * @param {array} row The row data\n   * @returns {string} Returns the link uri\n   */\n   rowLink(row) {\n     return \"\";\n   };\n\n  /**\n   * Sort the tabe by a key (sent via a UI Event)\n   * @param {string} key The key to sort by\n   */\n   sortBy(key) {\n     if (key && ( (this.editable) || (!this.editable && this.sortKey !== key))) {\n       this.sortKey = key;\n       this.collection.sortByKey(key);\n       this.refresh();\n     }\n   };\n\n /**\n  * Return the current page number\n  * @returns {number} The current page number\n  */\n  currentPage() {\n    return this.collection.currentPage;\n  };\n\n /**\n  * Return the total pages\n  * @returns {number} The total pages\n  */\n  totalPages() {\n    return this.collection.totalPages;\n  };\n\n /**\n  * Advance to the next page\n  */\n  nextPage() {\n    this.collection.nextPage();\n    this.refresh();\n  };\n\n /**\n  * Return to the previous page\n  */\n  previousPage() {\n    this.collection.previousPage();\n    this.refresh();\n  };\n\n /**\n  * Go to a specific page\n  * @param {number} page The page to go to\n  */\n  goToPage(page) {\n    this.collection.goToPage(page);\n    this.refresh();\n  };\n\n /**\n  * Return to the first page\n  */\n  firstPage() {\n    this.collection.firstPage();\n    this.refresh();\n  };\n\n /**\n  * Advance to the last page\n  */\n  lastPage() {\n    this.collection.lastPage();\n    this.refresh();\n  };\n\n /**\n  * Edit a cell at the row and column specified\n  * @param {number} row The row\n  * @param {number} col The column\n  * @param {any} value The value to set\n  */\n  editCell(row, col, value) {\n    if (row && col) {\n      let model = this.collection.at(row), name = this.columns[col];\n      if (model && name) {\n        model.set(name, value);\n      }\n    }\n  };\n\n /**\n  * Copy a cell at the row and column  to another\n  * @param {number} row1 The 'from' row\n  * @param {number} col1 The 'from' column\n  * @param {number} row2 The 'to' row\n  * @param {number} col2 The 'to' column\n  */\n  copyCell(row1, col1, row2, col2) {\n    if (row1 && col1 && row2 && col2) {\n      let model1 = this.collection.at(row1), name1 = this.columns[col1],\n      model2 = this.collection.at(row);\n      if (model1 && name1 && model2) {\n        model2.set(name1, value1);\n      }\n    }\n  };\n /**\n  * Clear a cell at the row and column specified\n  * @param {number} row The row\n  * @param {number} col The column\n  */\n  clearCell(row, col) {\n    this.editCell(row, col, null);\n  };\n\n /**\n  * Render the table\n  * @returns {object} Returns the view context ('this')\n  */\n  render() {\n    //console.log(\"render\");\n    if (!this.isInitalized) {\n      //console.warn(\"AUGMENTED: AutoTable Can't render yet, not initialized!\");\n      return this;\n    }\n    let e;\n    if (this.template) {\n      // refresh the table body only\n\t    //console.log(\"set progress.\");\n      this.showProgressBar(true);\n      if (this.el) {\n        e = (typeof this.el === 'string') ? document.querySelector(this.el) : this.el;\n        //console.log(\"my el\", e);\n        if (e) {\n\t        let tbody = e.querySelector(\"tbody\"), thead = e.querySelector(\"thead\");\n          if (this.sortable) {\n            this._unbindSortableColumnEvents();\n          }\n          if (this.editable) {\n            this._unbindCellChangeEvents();\n          }\n          if (this._columns && (Object.keys(this._columns).length > 0)){\n            while (thead.hasChildNodes()) {\n              thead.removeChild(thead.lastChild);\n            }\n            directDOMTableHeader(thead, this._columns, this.lineNumbers, this.sortKey, this.display, this.selectable);\n          } else {\n      \t\t  if (thead) {\n              while (thead.hasChildNodes()) {\n                thead.removeChild(thead.lastChild);\n              }\n      \t\t  }\n          }\n          if (this.collection && (this.collection.length > 0) && tbody){\n            while (tbody.hasChildNodes()) {\n              tbody.removeChild(tbody.lastChild);\n            }\n            if (this.editable) {\n              // links not supported\n              directDOMEditableTableBody(tbody, this.collection.toJSON(), this._columns, this.lineNumbers, this.sortKey, this.display, this.selectable, this.name);\n            } else {\n              directDOMTableBody(tbody, this.collection.toJSON(), this._columns, this.lineNumbers, this.sortKey, this.display, this.selectable, this.name, this.linkable, this.links, this[this.links.link]);\n            }\n          } else {\n            while (tbody.hasChildNodes()) {\n              tbody.removeChild(tbody.lastChild);\n            }\n          }\n        }\n      } else {\n        //console.warn(\"AUGMENTED: AutoTable no element anchor, not rendering.\");\n      }\n    } else {\n      //console.debug(\"no template\");\n      this.template = \"notused\";\n      this.showProgressBar(true);\n\n      if (this.el) {\n        //console.debug(\"no template with el \" + this.el);\n        e = (typeof this.el === 'string') ? document.querySelector(this.el) : this.el;\n        if (e) {\n          e.innerHTML = \"\";\n          // progress bar\n          let n = document.createElement(\"progress\"),\n          t = document.createTextNode(\"Please wait.\");\n          n.appendChild(t);\n          e.appendChild(n);\n\n          // the table\n          directDOMTableCompile(e, this.name, this.description, this._columns, this.collection.toJSON(), this.lineNumbers, this.sortKey, this.editable, this.display, this.selectable, this.linkable, this.links, this[this.links.link]);\n\n          // pagination control\n          if (this.renderPaginationControl) {\n            directDOMPaginationControl(e, this.currentPage(), this.totalPages());\n          }\n\n          // message\n          n = document.createElement(\"p\");\n          n.classList.add(\"message\");\n          e.appendChild(n);\n        }\n      } else {\n        //console.warn(\"AUGMENTED: AutoTable no element anchor, not rendering.\");\n      }\n\n      if (this.renderPaginationControl) {\n        this._bindPaginationControlEvents();\n      }\n    }\n    this.delegateEvents();\n\n    if (this.sortable) {\n      this._bindSortableColumnEvents();\n    }\n\n    if (this.editable) {\n      this._bindCellChangeEvents();\n    }\n\n    this.showProgressBar(false);\n    this.setTheme(this.theme);\n\n    return this;\n  };\n\n /**\n  * Fetch the schema from the source URI\n  * @param uri {string} the URI to fetch from\n  */\n  retrieveSchema(uri) {\n    const that = this;\n    let schema = null;\n\n    // TODO: make a fetch\n    request({\n      url: uri,\n      contentType: \"application/json\",\n      dataType: \"json\",\n      success: (data, status) => {\n        if (typeof data === \"string\") {\n          schema = JSON.parse(data);\n        } else {\n          schema = data;\n        }\n        const options = { \"schema\": schema };\n        that.initialize(options);\n      },\n      error: (data, status) => {\n        this.showMessage(\"AutomaticTable Failed to fetch schema!!\");\n      }\n    });\n  };\n\n /**\n  * Fetch the data from the source URI\n  */\n  fetch() {\n    // TODO: should be a promise\n    this.showProgressBar(true);\n\n    const view = this;\n\n    const successHandler = function() {\n      view.showProgressBar(false);\n      view.sortKey = null;\n      view.populate(view.collection.toJSON());\n      view.refresh();\n    };\n\n    const failHandler = function() {\n      view.showProgressBar(false);\n      view.showMessage(\"AutomaticTable fetch failed!\");\n    };\n\nconsole.debug(this.uri);\n\n    if (this.uri) {\n\n      this.collection.uri = this.uri;\n    }\n\n    this.collection.fetch({\n      reset: true,\n      success(){\n        successHandler();\n      },\n      error(){\n        failHandler();\n      }\n    });\n  };\n\n /**\n  * Save the data to the source\n  * This only functions if the table is editable\n  * @param {boolean} override Save even if not editable\n  * @returns Returns true if succesfull\n  */\n  save(override) {\n    if (this.editable || override) {\n      this.showProgressBar(true);\n\n      const view = this;\n\n      const successHandler = function() {\n        view.showProgressBar(false);\n        return true;\n      };\n\n      const failHandler = function() {\n        view.showProgressBar(false);\n        view.showMessage(\"AutomaticTable save failed!\");\n        //_logger.warn(\"AUGMENTED: AutomaticTable save failed!\");\n        return false;\n      };\n\n      this.collection.save({\n        reset: true,\n        success(){\n          successHandler();\n        },\n        error(){\n          failHandler();\n        }\n      });\n    }\n    return false;\n  };\n\n /**\n  * Populate the data in the table\n  * @param {array} source The source data array\n  */\n  populate(source) {\n    if (source && Array.isArray(source)) {\n      this.sortKey = null;\n      this.data = source;\n      this.collection.reset(this.data);\n    }\n  };\n\n /**\n  * Clear all the data in the table\n  */\n  clear() {\n    this.sortKey = null;\n    this.data = [];\n    this.collection.reset(null);\n  };\n\n /**\n  * Refresh the table (Same as render)\n  * @returns {object} Returns the view context ('this')\n  * @see AutomaticTable.render\n  */\n  refresh() {\n    return this.render();\n  };\n\n /**\n  * Save Cell Event\n  * @private\n  */\n  saveCell(event) {\n    const key = event.target, model = this.collection.at(parseInt(key.getAttribute(TABLE_DATA_ATTRIBUTES.INDEX)));\n    let value = key.value;\n    if ((key.getAttribute(\"type\")) === \"number\") {\n      value = parseInt(key.value);\n    }\n    model.set(key.getAttribute(TABLE_DATA_ATTRIBUTES.NAME), value);\n  };\n\n /**\n  * @private\n  */\n  _bindCellChangeEvents() {\n    let myEl = (typeof this.el === 'string') ? this.el : this.el.localName;\n    let cells = [].slice.call(document.querySelectorAll(myEl + \" table tr td input\"));\n    let i=0, l=cells.length;\n    for(i=0; i < l; i++) {\n      cells[i].addEventListener(\"change\", this.saveCell.bind(this), false);\n    }\n    // bind the select boxes as well\n    cells = [].slice.call(document.querySelectorAll(myEl + \" table tr td select\"));\n    i=0;\n    l=cells.length;\n    for(i=0; i < l; i++) {\n      cells[i].addEventListener(\"change\", this.saveCell.bind(this), false);\n    }\n  };\n\n /**\n  * @private\n  */\n  _unbindCellChangeEvents() {\n    let myEl = (typeof this.el === 'string') ? this.el : this.el.localName;\n    let cells = [].slice.call(document.querySelectorAll(myEl + \" table tr td input\"));\n    let i=0, l=cells.length;\n    for(i=0; i < l; i++) {\n      cells[i].removeEventListener(\"change\", this.saveCell, false);\n    }\n    // unbind the select boxes as well\n    cells = [].slice.call(document.querySelectorAll(myEl + \" table tr td select\"));\n    i=0;\n    l=cells.length;\n    for(i=0; i < l; i++) {\n      cells[i].removeEventListener(\"change\", this.saveCell, false);\n    }\n  };\n\n /**\n  * Export the table data in requested format\n  * @param {string} type The type requested (csv or html-default)\n  * @returns {string} The table data in requested format\n  */\n  exportTo(type) {\n    let e = \"\";\n    if (type === \"csv\") {\n      e = csvTableCompile(this.name, this.description, this._columns, this.collection.toJSON());\n    } else if (type === \"tsv\") {\n      e = tsvTableCompile(this.name, this.description, this._columns, this.collection.toJSON());\n    } else {\n      // html\n      e = defaultTableCompile(this.name, this.description, this._columns, this.collection.toJSON(), false, null);\n    }\n    return e;\n  };\n\n /**\n  * @private\n  */\n  _unbindPaginationControlEvents() {\n    if (this.pageControlBound) {\n      let myEl = (typeof this.el === 'string') ? this.el : this.el.localName;\n      let first = document.querySelector(myEl + \" div.paginationControl span.first\");\n      let previous = document.querySelector(myEl + \" div.paginationControl span.previous\");\n      let next = document.querySelector(myEl + \" div.paginationControl span.next\");\n      let last = document.querySelector(myEl + \" div.paginationControl span.last\");\n      if (first) {\n        first.removeEventListener(\"click\", this.firstPage, false);\n      }\n      if (previous) {\n        previous.removeEventListener(\"click\", this.previousPage, false);\n      }\n      if (next) {\n        next.removeEventListener(\"click\", this.nextPage, false);\n      }\n      if (last) {\n        last.removeEventListener(\"click\", this.lastPage, false);\n      }\n      this.pageControlBound = false;\n    }\n  };\n\n /**\n  * @private\n  */\n  _bindPaginationControlEvents() {\n    if (!this.pageControlBound) {\n      let myEl = (typeof this.el === 'string') ? this.el : this.el.localName;\n      let first = document.querySelector(myEl + \" div.paginationControl span.first\");\n      let previous = document.querySelector(myEl + \" div.paginationControl span.previous\");\n      let next = document.querySelector(myEl + \" div.paginationControl span.next\");\n      let last = document.querySelector(myEl + \" div.paginationControl span.last\");\n      if (first) {\n        first.addEventListener(\"click\", this.firstPage.bind(this), false);\n      }\n      if (previous) {\n        previous.addEventListener(\"click\", this.previousPage.bind(this), false);\n      }\n      if (next) {\n        next.addEventListener(\"click\", this.nextPage.bind(this), false);\n      }\n      if (last) {\n        last.addEventListener(\"click\", this.lastPage.bind(this), false);\n      }\n      this.pageControlBound = true;\n    }\n  };\n\n /**\n  * @private\n  */\n  _deriveEventTarget(event) {\n    let key = null;\n    if (event) {\n      key = event.target.getAttribute(TABLE_DATA_ATTRIBUTES.NAME);\n    }\n    return key;\n  };\n\n /**\n  * @private\n  */\n  _sortByHeaderEvent(event) {\n    let key = this._deriveEventTarget(event);\n    this.sortBy(key);\n  };\n\n /**\n  * @private\n  */\n  _unbindSortableColumnEvents()  {\n    if (this.el && this.sortable) {\n      let list;\n      if (typeof this.el === 'string') {\n        list = document.querySelectorAll(this.el + \" table tr th\");\n      } else {\n        list = document.querySelectorAll(this.el.localName + \" table tr th\");\n      }\n      let i = 0, l = list.length;\n      for (i = 0; i < l; i++) {\n        list[i].removeEventListener(\"click\", this._sortByHeaderEvent, false);\n      }\n    }\n  };\n\n /**\n  * @private\n  */\n  _bindSortableColumnEvents()  {\n    if (this.el && this.sortable) {\n      let list;\n      if (typeof this.el === 'string') {\n        list = document.querySelectorAll(this.el + \" table tr th\");\n      } else {\n        list = document.querySelectorAll(this.el.localName + \" table tr th\");\n      }\n      let i = 0, l = list.length;\n      for (i = 0; i < l; i++) {\n        if (list[i].getAttribute(TABLE_DATA_ATTRIBUTES.NAME) === \"lineNumber\") {\n          // Do I need to do something?\n        } else {\n          list[i].addEventListener(\"click\", this._sortByHeaderEvent.bind(this), false);\n        }\n      }\n    }\n  };\n\n /**\n  * An overridable template compile\n  * @returns {string} Returns the template\n  */\n  compileTemplate() {\n    return \"\";\n  };\n\n /**\n  * Sets the URI\n  * @param {string} uri The URI\n  */\n  setURI(uri) {\n    this.uri = uri;\n    this.collection.uri = uri;\n  };\n\n /**\n  * Sets the schema\n  * @param {object} schema The JSON schema of the dataset\n  */\n  setSchema(schema) {\n    this.schema = schema;\n    this._columns = schema.properties;\n    this.collection.reset();\n    this.collection.schema = schema;\n\n    if (this.uri) {\n      this.collection.uri = this.uri;\n    }\n  };\n\n /**\n  * Enable/Disable the progress bar\n  * @param {boolean} show Show or Hide the progress bar\n  */\n  showProgressBar(show) {\n    if (this.el) {\n      let e = (typeof this.el === 'string') ? document.querySelector(this.el) : this.el;\n      if (e) {\n        let p = e.querySelector(\"progress\");\n        if (p) {\n          p.style.display = (show) ? \"block\" : \"none\";\n          p.style.visibility = (show) ? \"visible\" : \"hidden\";\n        }\n      }\n    }\n  };\n\n /**\n  * Show a message related to the table\n  * @param {string} message Some message to display\n  */\n  showMessage(message) {\n    if (this.el) {\n      let e = (typeof this.el === 'string') ? document.querySelector(this.el) : this.el;\n      let p = e.querySelector(\"p[class=message]\");\n      if (p) {\n        p.innerHTML = message;\n      }\n    }\n  };\n /**\n\n  * Validate the table\n  * @returns {boolean} Returns true on success of validation\n  */\n  validate() {\n    let messages = (this.collection) ? this.collection.validate() : null;\n    if (!this.collection.isValid() && messages && messages.messages) {\n      this.showMessage(formatValidationMessages(messages.messages));\n    } else {\n      this.showMessage(\"\");\n    }\n    return messages;\n  };\n\n /**\n  * Is the table valid\n  * @returns {boolean} Returns true if valid\n  */\n  isValid() {\n    return (this.collection) ? this.collection.isValid() : true;\n  };\n\n /**\n  * Remove the table and all binds\n  * @returns Returns the context (this)\n  */\n  remove() {\n    /* off to unbind the events */\n    this.undelegateEvents();\n    this.off();\n    this.stopListening();\n    if (this.el) {\n      const el = Dom.selector(this.el);\n      if (el) {\n        el.innerHTML = \"\";\n      } else {\n        //console.debug(\"no el selected to remove \" + this.el);\n      }\n    } else {\n      //console.debug(\"no el to remove\");\n    }\n    Dom.empty(this.el);\n\n    return this;\n  };\n /**\n  * Gets the selected models\n  * @returns {Array} Returns array of selected rows (models)\n  */\n  getSelected() {\n    const keys = Object.keys(this.model.attributes), l = keys.length, selected = [];\n    let i = 0;\n    for (i = 0; i < l; i++) {\n      if (keys[i].includes(\"row-\") && this.model.attributes[keys[i]] === true) {\n        const n = Number(keys[i].substring(4));\n        selected.push(this.collection.at(n));\n      }\n    }\n    return selected;\n  };\n\n /**\n  * Gets the selected row indexes\n  * @returns {Array} Returns array of selected rows (indexes)\n  */\n  getSelectedIndex() {\n    const keys = Object.keys(this.model.attributes), l = keys.length, selected = [];\n    let i = 0;\n    for (i = 0; i < l; i++) {\n      if (keys[i].includes(\"row-\") && this.model.attributes[keys[i]] === true) {\n        selected.push(Number(keys[i].substring(4)));\n      }\n    }\n    return selected;\n  };\n\n /**\n  * Removes the models\n  * @param {Array} rows Models of the rows to remove\n  */\n  removeRows(rows) {\n    const l = rows.length;\n    let i = 0;\n    for (i = 0; i < l; i++) {\n      const model = rows[i];\n      if (!model.uri) {\n        model.uri = this.uri + \"/\" + model.id;\n      }\n      model.destroy();\n    }\n  };\n};\n\nexport default AutomaticTable;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","import AutomaticTable from \"./autoTable.js\";\nimport BigDataTable from \"./bigDataTable.js\";\nimport EditableBigDataTable from \"./editableBigTable.js\";\nimport EditableLocalStorageTable from \"./editableLocalStorageTable.js\";\nimport EditableTable from \"./editableTable.js\";\nimport LocalStorageTable from \"./localStorageTable.js\";\nimport Spreadsheet from \"./spreadsheet.js\";\n\nmodule.exports.AutomaticTable = AutomaticTable;\nmodule.exports.BigDataTable = BigDataTable;\nmodule.exports.EditableBigDataTable = EditableBigDataTable;\nmodule.exports.EditableLocalStorageTable = EditableLocalStorageTable;\nmodule.exports.EditableTable = EditableTable;\nmodule.exports.LocalStorageTable = LocalStorageTable;\nmodule.exports.Spreadsheet = Spreadsheet;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","// Tables and Grids\n\nexport const TABLE_DATA_ATTRIBUTES = {\n  \"NAME\":           \"data-name\",\n  \"TYPE\":           \"data-type\",\n  \"DESCRIPTION\":    \"data-description\",\n  \"INDEX\":          \"data-index\",\n  \"LABEL\":          \"data-label\",\n  \"SORT_CLASS\":      \"sorted\"\n};\n\nexport const csvTableCompile = (name, desc, columns, data, del) => {\n  let csv = \"\";\n  if (!del) {\n    del = \",\";\n  }\n  if (columns) {\n    let key, obj;\n    for (key in columns) {\n      if (columns.hasOwnProperty(key)) {\n        obj = columns[key];\n        csv = csv + key + del;\n      }\n    }\n    csv = csv.slice(0, -1);\n    csv = csv + \"\\n\";\n  }\n\n  let i, d, dkey, dobj, t;\n  const l = data.length;\n  for (i = 0; i < l; i++) {\n    d = data[i];\n    for (dkey in d) {\n      if (d.hasOwnProperty(dkey)) {\n        dobj = d[dkey];\n        t = (typeof dobj);\n        csv = csv + dobj + del;\n      }\n    }\n    csv = csv.slice(0, -1);\n    csv = csv + \"\\n\";\n  }\n  return csv;\n};\n\nexport const tsvTableCompile = (name, desc, columns, data) => {\n  return csvTableCompile(name, desc, columns, data, \"\\t\");\n};\n\nexport const defaultTableCompile = (name, desc, columns, data, lineNumbers, sortKey, editable, display) => {\n  let html = `<table ${TABLE_DATA_ATTRIBUTES.NAME}=\"${name}\" ${TABLE_DATA_ATTRIBUTES.DESCRIPTION}=\"${desc}\">`;\n  if (name) {\n    html = html + \"<caption\";\n    if (desc) {\n      html = html + ` title=\"${desc}\"`;\n    }\n    html = html + `>${name}</caption>`;\n  }\n  html = html + \"<thead>\";\n  html = html + defaultTableHeader(columns, lineNumbers, sortKey, display);\n  html = html + \"</thead><tbody>\";\n  if (data) {\n    if (editable) {\n      html = html + editableTableBody(data, columns, lineNumbers, sortKey, display);\n    } else {\n      html = html + defaultTableBody(data, columns, lineNumbers, sortKey, display);\n    }\n  }\n  html = html + \"</tbody></table>\";\n  return html;\n};\n\nexport const defaultTableHeader = (columns, lineNumbers, sortKey, display) => {\n  let html = \"\";\n  if (columns) {\n    html = html + \"<tr>\";\n    if (lineNumbers) {\n      html = html + `<th ${TABLE_DATA_ATTRIBUTES.NAME}=\"lineNumber\">#</th>`;\n    }\n    let key, obj;\n    for (key in columns) {\n      if (columns.hasOwnProperty(key)) {\n        obj = columns[key];\n        html = html + `<th ${TABLE_DATA_ATTRIBUTES.NAME}=\"${key}\" ${TABLE_DATA_ATTRIBUTES.DESCRIPTION}=\"${obj.description}\" ${TABLE_DATA_ATTRIBUTES.TYPE}=\"${obj.type}\"`;\n        if (sortKey === key) {\n          html = html + \" class=\\\"\" + TABLE_DATA_ATTRIBUTES.SORT_CLASS + \"\\\"\";\n        }\n        html = html + \">\" + key + \"</th>\";\n      }\n    }\n    html = html + \"</tr>\";\n  }\n  return html;\n};\n\nexport const defaultTableBody = (data, columns, lineNumbers, sortKey, display) => {\n  let i, d, dkey, dobj, html = \"\", l = data.length, t;\n  for (i = 0; i < l; i++) {\n    d = data[i];\n    html = html + \"<tr>\";\n    if (lineNumbers) {\n      html = html + \"<td class=\\\"label number\\\">\" + (i+1) + \"</td>\";\n    }\n    for (dkey in d) {\n      if (d.hasOwnProperty(dkey)) {\n        dobj = d[dkey];\n        t = (typeof dobj);\n        html = html + \"<td \" + TABLE_DATA_ATTRIBUTES.TYPE + \"=\\\"\" + t + \"\\\" class=\\\"\" + t;\n        if (sortKey === dkey) {\n          html = html + \" \" + TABLE_DATA_ATTRIBUTES.SORT_CLASS;\n        }\n        html = html + \"\\\">\" + dobj + \"</td>\";\n      }\n    }\n    html = html + \"</tr>\";\n  }\n  return html;\n};\n\nexport const directDOMTableCompile = (el, name, desc, columns, data, lineNumbers, sortKey, editable, display, selectable, linkable, linksConfig, linkCallback) => {\n  const table = document.createElement(\"table\"), thead = document.createElement(\"thead\"), tbody = document.createElement(\"tbody\");\n  let n, t;\n\n  // Binding\n  table.setAttribute(\"data-\" + name, name);\n\n  table.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, name);\n  table.setAttribute(TABLE_DATA_ATTRIBUTES.DESCRIPTION, desc);\n  if (desc) {\n    n = document.createElement(\"caption\");\n    if (name) {\n      n.setAttribute(\"title\", name);\n    }\n    t = document.createTextNode(desc);\n    n.appendChild(t);\n    table.appendChild(n);\n  }\n  directDOMTableHeader(thead, columns, lineNumbers, sortKey, display, selectable);\n  table.appendChild(thead);\n  table.appendChild(tbody);\n  if (data) {\n    if (editable) {\n      directDOMEditableTableBody(tbody, data, columns, lineNumbers, sortKey, display, selectable, name, linkable, linksConfig, linkCallback);\n    } else {\n      directDOMTableBody(tbody, data, columns, lineNumbers, sortKey, display, selectable, name, linkable, linksConfig, linkCallback);\n    }\n  }\n  el.appendChild(table);\n};\n\nexport const directDOMTableHeader = (el, columns, lineNumbers, sortKey, display, selectable) => {\n  if (columns && el) {\n    const tr = document.createElement(\"tr\");\n    let n, t, key, obj;\n    if (selectable) {\n      n = document.createElement(\"th\");\n      n.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, \"select\");\n      t = document.createTextNode(\"\\u274f\");\n      n.appendChild(t);\n      tr.appendChild(n);\n    }\n\n    if (lineNumbers) {\n      n = document.createElement(\"th\");\n      n.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, \"lineNumber\");\n      t = document.createTextNode(\"#\");\n      n.appendChild(t);\n      tr.appendChild(n);\n    }\n\n    for (key in columns) {\n      let displayCol = true;\n      if (display !== null) {\n          displayCol = (display.indexOf(key) !== -1);\n      }\n\n      if (displayCol && columns.hasOwnProperty(key)) {\n        obj = columns[key];\n\n        n = document.createElement(\"th\");\n        n.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, key);\n        n.setAttribute(TABLE_DATA_ATTRIBUTES.DESCRIPTION, obj.description);\n        n.setAttribute(TABLE_DATA_ATTRIBUTES.TYPE, obj.type);\n        if (sortKey === key) {\n          n.classList.add(TABLE_DATA_ATTRIBUTES.SORT_CLASS);\n        }\n\n        t = document.createTextNode(key);\n        n.appendChild(t);\n        tr.appendChild(n);\n      }\n    }\n    el.appendChild(tr);\n  }\n};\n\nexport const directDOMTableBody = (el, data, columns, lineNumbers, sortKey, display, selectable, name, linkable, linksConfig, linkCallback) => {\n  const l = data.length;\n  let i, d, dkey, dobj, t, td, tn, tr, cobj;\n\n  for (i = 0; i < l; i++) {\n    d = data[i];\n    tr = document.createElement(\"tr\");\n\n    if (selectable) {\n      td = document.createElement(\"td\");\n      td.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, \"select\");\n      tn = document.createElement(\"input\");\n      tn.type = \"checkbox\";\n      tn.name = String(i);\n      tn.value = String(i);\n      // Binding\n      tn.setAttribute(\"data-\" + name, \"row-\" + i);\n\n      td.appendChild(tn);\n      td.classList.add(\"label\", \"select\");\n      tr.appendChild(td);\n    }\n\n    if (lineNumbers) {\n      td = document.createElement(\"td\");\n      tn = document.createTextNode(String(i + 1));\n      td.appendChild(tn);\n      td.classList.add(\"label\", \"number\");\n      tr.appendChild(td);\n    }\n    for (dkey in columns) {\n      let displayCol = true;\n      if (display !== null) {\n          displayCol = (display.indexOf(dkey) !== -1);\n      }\n      if (displayCol && d.hasOwnProperty(dkey)) {\n        dobj = d[dkey];\n        t = (typeof dobj);\n        td = document.createElement(\"td\");\n        tn = document.createTextNode(dobj);\n\n        if (linkable && linksConfig && linkCallback &&\n            ((linksConfig.column === dkey) || (linksConfig.wholeRow)) ) {\n          const a = document.createElement(\"a\");\n          //a.title = \"my title text\";\n          a.href = linkCallback(d);\n          a.appendChild(tn);\n          td.appendChild(a);\n        } else {\n          td.appendChild(tn);\n        }\n\n        td.classList.add(t);\n        if (sortKey === dkey) {\n          td.classList.add(TABLE_DATA_ATTRIBUTES.SORT_CLASS);\n        }\n        td.setAttribute(TABLE_DATA_ATTRIBUTES.TYPE, t);\n        td.setAttribute(TABLE_DATA_ATTRIBUTES.LABEL, dkey);\n        tr.appendChild(td);\n      }\n    }\n    el.appendChild(tr);\n  }\n};\n\nexport const directDOMEditableTableBody = (el, data, columns, lineNumbers, sortKey, display, selectable, name) => {\n  const l = data.length, ln = lineNumbers;\n  let i, d, dkey, dobj, t, td, tn, tr, input, cobj;\n  for (i = 0; i < l; i++) {\n    d = data[i];\n    tr = document.createElement(\"tr\");\n\n    if (selectable) {\n      td = document.createElement(\"td\");\n      td.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, \"select\");\n      tn = document.createElement(\"input\");\n      tn.type = \"checkbox\";\n      tn.name = String(i);\n      tn.value = String(i);\n      td.appendChild(tn);\n      td.classList.add(\"label\", \"select\");\n      tr.appendChild(td);\n    }\n\n    if (ln) {\n      td = document.createElement(\"td\");\n      tn = document.createTextNode(String(i + 1));\n      td.appendChild(tn);\n      td.classList.add(\"label\", \"number\");\n      tr.appendChild(td);\n    }\n\n    for (dkey in d) {\n      let displayCol = true;\n      if (display !== null) {\n          displayCol = (display.indexOf(dkey) !== -1);\n      }\n\n      if (displayCol && d.hasOwnProperty(dkey)) {\n        cobj = (columns[dkey]) ? columns[dkey] : {};\n        dobj = d[dkey];\n\n        t = (typeof dobj);\n\n        td = document.createElement(\"td\");\n        td.classList.add(t);\n        if (sortKey === dkey) {\n          td.classList.add(TABLE_DATA_ATTRIBUTES.SORT_CLASS);\n        }\n        td.setAttribute(TABLE_DATA_ATTRIBUTES.TYPE, t);\n        td.setAttribute(TABLE_DATA_ATTRIBUTES.LABEL, dkey);\n        // input field\n\n        if (t === \"object\") {\n          if (Array.isArray(dobj)) {\n            let iii = 0, lll = dobj.length, option, tOption;\n            input = document.createElement(\"select\");\n            for (iii = 0; iii < lll; iii++) {\n              option = document.createElement(\"option\");\n              option.setAttribute(\"value\", dobj[iii]);\n              tOption = document.createTextNode(dobj[iii]);\n              option.appendChild(tOption);\n              input.appendChild(option);\n            }\n          } else {\n            input = document.createElement(\"textarea\");\n            input.value = JSON.stringify(dobj);\n          }\n        } else if (t === \"boolean\") {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"checkbox\");\n          if (dobj === true) {\n            input.setAttribute(\"checked\", \"checked\");\n          }\n          input.value = dobj;\n        } else if (t === \"number\") {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"number\");\n          input.value = dobj;\n        } else if (t === \"string\" && cobj.enum) {\n          input = document.createElement(\"select\");\n          let iiii = 0, llll = cobj.enum.length, option2, tOption2;\n          for (iiii = 0; iiii < llll; iiii++) {\n            option2 = document.createElement(\"option\");\n            option2.setAttribute(\"value\", cobj.enum[iiii]);\n            tOption2 = document.createTextNode(cobj.enum[iiii]);\n            if (dobj === cobj.enum[iiii]) {\n              option2.setAttribute(\"selected\", \"selected\");\n            }\n            option2.appendChild(tOption2);\n            input.appendChild(option2);\n          }\n        } else if (t === \"string\" && (cobj.format === \"email\")) {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"email\");\n          input.value = dobj;\n        } else if (t === \"string\" && (cobj.format === \"uri\")) {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"url\");\n          input.value = dobj;\n        } else if (t === \"string\" && (cobj.format === \"date-time\")) {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"datetime\");\n          input.value = dobj;\n        } else {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"text\");\n          input.value = dobj;\n        }\n\n        if (t === \"string\" && cobj.pattern) {\n          input.setAttribute(\"pattern\", cobj.pattern);\n        }\n\n        if (cobj.minimum) {\n          input.setAttribute(\"min\", cobj.minimum);\n        }\n\n        if (cobj.maximum) {\n          input.setAttribute(\"max\", cobj.maximum);\n        }\n\n        if (t === \"string\" && cobj.minlength) {\n          input.setAttribute(\"minlength\", cobj.minlength);\n        }\n\n        if (t === \"string\" && cobj.maxlength) {\n          input.setAttribute(\"maxlength\", cobj.maxlength);\n        }\n\n        input.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, dkey);\n        input.setAttribute(TABLE_DATA_ATTRIBUTES.INDEX, i);\n\n        // Binding\n        input.setAttribute(\"data-\" + name, name);\n\n        td.appendChild(input);\n\n        tr.appendChild(td);\n      }\n    }\n    el.appendChild(tr);\n  }\n};\n\n/*\n* << First | < Previous | # | Next > | Last >>\n*/\nexport const directDOMPaginationControl = (el, currentPage, totalPages) => {\n  let d, n, t;\n  d = document.createElement(\"div\");\n  d.classList.add(\"paginationControl\");\n\n  n = document.createElement(\"span\");\n  n.classList.add(\"first\");\n  t = document.createTextNode(\"<< First\");\n  n.appendChild(t);\n  d.appendChild(n);\n\n  n = document.createElement(\"span\");\n  n.classList.add(\"previous\");\n  t = document.createTextNode(\"< Previous\");\n  n.appendChild(t);\n  d.appendChild(n);\n\n  n = document.createElement(\"span\");\n  n.classList.add(\"current\");\n  t = document.createTextNode(`${currentPage} of ${totalPages}`);\n  n.appendChild(t);\n  d.appendChild(n);\n\n  n = document.createElement(\"span\");\n  n.classList.add(\"next\");\n  t = document.createTextNode(\"Next >\");\n  n.appendChild(t);\n  d.appendChild(n);\n\n  n = document.createElement(\"span\");\n  n.classList.add(\"last\");\n  t = document.createTextNode(\"Last >>\");\n  n.appendChild(t);\n  d.appendChild(n);\n\n  el.appendChild(d);\n};\n","const formatValidationMessages = (messages) => {\n  let html = \"\";\n  if (messages && messages.length > 0) {\n    html = html + \"<ul class=\\\"errors\\\">\";\n    const l = messages.length;\n    let i = 0, ii = 0;\n    for (i = 0; i < l; i++) {\n      const ll = messages[i].errors.length;\n      for (ii = 0; ii < ll; ii++) {\n        html = html + \"<li>\" + messages[i].errors[ii] + \"</li>\";\n      }\n    }\n    html = html + \"</ul>\";\n  }\n  return html;\n};\n\nexport default formatValidationMessages;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;","import AutomaticTable from \"./autoTable.js\";\n\n/**\n * Instance class preconfigured for sorting and pagination\n * @extends AutomaticTable\n * @memberof Component\n */\nclass BigDataTable extends AutomaticTable {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    options.lineNumbers = true;\n    options.sortable = true;\n    super(options);\n    this.renderPaginationControl = true;\n  };\n};\n\nexport default BigDataTable;\n","import AutomaticTable from \"./autoTable.js\";\n\n/**\n * Instance class preconfigured for sorting and pagination\n * @extends AutomaticTable\n * @memberof Component\n */\nclass EditableBigDataTable extends AutomaticTable {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    options.lineNumbers = true;\n    options.sortable = true;\n    options.editable = true;\n    super(options);\n    this.renderPaginationControl = true;\n  };\n};\n\nexport default EditableBigDataTable;\n","import AutomaticTable from \"./autoTable.js\";\n\n/**\n* Instance class preconfigured for editing, sorting, from local storage\n* @extends AutomaticTable\n* @memberof Component\n*/\nclass EditableLocalStorageTable extends AutomaticTable {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    options.lineNumbers = true;\n    options.sortable = true;\n    options.editable = true;\n    options.localStorage = true;\n    super(options);\n    this.renderPaginationControl = true;\n  };\n};\n\nexport default EditableLocalStorageTable;\n","import AutomaticTable from \"./autoTable.js\";\n\n/**\n * Instance class preconfigured for editing\n * @extends AutomaticTable\n * @memberof Component\n */\nclass EditableTable extends AutomaticTable {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    options.lineNumbers = true;\n    options.editable = true;\n    super(options);\n  };\n};\n\nexport default EditableTable;\n","import AutomaticTable from \"./autoTable.js\";\n\n/**\n* Instance class preconfigured for local storage-based table\n* @extends AutomaticTable\n* @memberof Component\n*/\nclass LocalStorageTable extends AutomaticTable {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    options.lineNumbers = true;\n    options.sortable = true;\n    options.editable = false;\n    options.localStorage = true;\n    super(options);\n    this.renderPaginationControl = true;\n  };\n};\n\nexport default LocalStorageTable;\n","import * as  Augmented from \"augmentedjs-next\";\nimport AutomaticTable from \"./autoTable.js\";\nimport { Collection, LocalStorageCollection } from \"presentation-models\";\n\n/**\n * Instance class preconfigured for editing for use as a Spreadsheet.<br/>\n * If a propery for length is not specified, it will buffer 10 lines for editing.\n * @extends AutomaticTable\n * @memberof Component\n */\nclass Spreadsheet extends AutomaticTable {\n  constructor(options) {\n    super(options);\n    // TODO: overrides?\n    this.lineNumbers = true;\n    this.sortable = true;\n    this.editable = true;\n\n    if (options && options.pagination) {\n      this.renderPaginationControl = options.pagination;\n    } else {\n      this.renderPaginationControl = false;\n    }\n\n    if (options && options.rows) {\n      this.rows = options.rows;\n    } else {\n      this.rows = 10;\n    }\n\n    if (options && options.columns) {\n      this.columns = options.columns;\n    } else {\n      this.rows = 5;\n    }\n\n    if (this.collection) {\n      this.collection.reset();\n    } else if (!this.collection && this.localStorage) {\n      this.collection = new LocalStorageCollection();\n    } else if (!this.collection) {\n      this.collection = new Collection();\n    }\n\n    // TODO: this might belong in parent\n\n    if (options) {\n      if (options.schema) {\n        // check if this is a schema vs a URI to get a schema\n        if (Augmented.isObject(options.schema)) {\n          this.schema = options.schema;\n        } else {\n          // is a URI?\n          let parsedSchema = null;\n          try {\n            parsedSchema = JSON.parse(options.schema);\n            if (parsedSchema && Augmented.isObject(parsedSchema)) {\n              this.schema = parsedSchema;\n            }\n          } catch(e) {\n            // AutoTable parsing string schema failed.  URI perhaps?\n            //_logger.warn(\"AUGMENTED: AutoTable parsing string schema failed.  URI perhaps?\");\n          }\n          if (!this.schema) {\n            this.retrieveSchema(options.schema);\n            this.isInitalized = false;\n            //return false;\n          }\n        }\n      }\n\n      if (options.el) {\n        this.el = options.el;\n      }\n\n      if (options.uri) {\n        this.uri = options.uri;\n        this.collection.url = options.uri;\n      }\n\n      if (options.data && (Array.isArray(options.data))) {\n        this.populate(options.data);\n      }\n\n      if (options.sortable) {\n        this.sortable = options.sortable;\n      }\n\n      if (options.lineNumbers) {\n        this.lineNumbers = options.lineNumbers;\n      }\n\n      if (options.localStorageKey && !options.uri) {\n        this.localStorageKey = options.localStorageKey;\n        this.uri = null;\n      }\n    }\n\n    if (this.collection && this.uri) {\n      this.collection.url = this.uri;\n    }\n    if (this.collection) {\n      this.collection.crossOrigin = this.crossOrigin;\n    }\n    if (this.schema) {\n      if ((!this.name || this.name === \"\") && this.schema.title) {\n        this.name = this.schema.title;\n      }\n      if ((!this.description || this.description === \"\") && this.schema.description) {\n        this.description = this.schema.description;\n      }\n\n      if (!this.isInitalized) {\n        this._columns = this.schema.properties;\n        this.collection.schema = this.schema;\n      }\n    } else {\n      //very basic schema\n      this.schema = {\n        \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n        \"title\": \"untitled\",\n        \"type\": \"object\",\n        \"description\": \"\",\n        \"properties\": {\n        }\n      };\n\n      let i = 0;\n\n      for (i = 0; i < this.columns; i++) {\n        this.schema.properties[String.fromCharCode(65 + i)] = {\n          \"description\": \"\",\n          \"type\": \"string\"\n        };\n      }\n\n      this._columns = this.schema.properties;\n      this.collection.schema = this.schema;\n    }\n\n    //buffer\n    this._generate();\n    this.collection.set(this.data);\n\n    this.isInitalized = true;\n  };\n\n  /**\n   * @propery {number} columns Defines a set of columns in the spreadsheet\n   * @memberof Spreadsheet\n   */\n\n  /**\n   * @propery {number} rows Defines a set of rows in the spreadsheet\n   * @memberof Spreadsheet\n   */\n\n  _generate() {\n    if (this.schema && this.schema.properties) {\n      let i = 0, ii = 0, keys = Object.keys(this.schema.properties), l = keys.length, obj = {};\n      this.data = [];\n      for (ii = 0; ii < this.rows; ii++) {\n        obj = {};\n        for (i = 0; i < l; i++) {\n          obj[keys[i]] = \"\";\n        }\n        this.data.push(obj);\n      }\n    }\n  }\n};\n\nexport default Spreadsheet;\n"],"sourceRoot":""}