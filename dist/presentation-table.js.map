{"version":3,"sources":["webpack://presentation-table/webpack/universalModuleDefinition","webpack://presentation-table/webpack/bootstrap","webpack://presentation-table/./src/autoTable.js","webpack://presentation-table/./src/bigDataTable.js","webpack://presentation-table/./src/editableBigTable.js","webpack://presentation-table/./src/editableLocalStorageTable.js","webpack://presentation-table/./src/editableTable.js","webpack://presentation-table/./src/functions/buildTable.js","webpack://presentation-table/./src/functions/messages.js","webpack://presentation-table/./src/index.js","webpack://presentation-table/./src/localStorageTable.js","webpack://presentation-table/./src/spreadsheet.js","webpack://presentation-table/external {\"commonjs\":\"next-core-utilities\",\"commonjs2\":\"next-core-utilities\",\"amd\":\"next-core-utilities\",\"root\":\"next-core-utilities\"}","webpack://presentation-table/external {\"commonjs\":\"presentation-decorator\",\"commonjs2\":\"presentation-decorator\",\"amd\":\"presentation-decorator\",\"root\":\"presentation-decorator\"}","webpack://presentation-table/external {\"commonjs\":\"presentation-dom\",\"commonjs2\":\"presentation-dom\",\"amd\":\"presentation-dom\",\"root\":\"presentation-dom\"}","webpack://presentation-table/external {\"commonjs\":\"presentation-models\",\"commonjs2\":\"presentation-models\",\"amd\":\"presentation-models\",\"root\":\"presentation-models\"}","webpack://presentation-table/external {\"commonjs\":\"presentation-request\",\"commonjs2\":\"presentation-request\",\"amd\":\"presentation-request\",\"root\":\"presentation-request\"}"],"names":["DEFAULT_KEY","DEFAULT_SORT_TYPE","DEFAULT_THEME","DecoratorView","constructor","style","options","theme","wholeRow","column","link","Model","PaginationFactory","LocalStorageCollection","Collection","parsedSchema","JSON","Array","setTheme","el","Dom","e","rowLink","sortBy","key","currentPage","totalPages","nextPage","previousPage","goToPage","firstPage","lastPage","editCell","row","model","name","copyCell","row1","model1","name1","model2","clearCell","render","document","tbody","thead","Object","n","t","isMaterial","retrieveSchema","that","schema","url","contentType","dataType","success","error","fetch","view","successHandler","failHandler","reset","save","populate","source","clear","refresh","saveCell","event","parseInt","TABLE_DATA_ATTRIBUTES","value","_bindCellChangeEvents","myEl","cells","i","l","_unbindCellChangeEvents","exportTo","type","_unbindPaginationControlEvents","first","previous","next","last","_bindPaginationControlEvents","_deriveEventTarget","_sortByHeaderEvent","_unbindSortableColumnEvents","list","_bindSortableColumnEvents","compileTemplate","setURI","setSchema","showProgressBar","p","showMessage","validate","messages","isValid","remove","getSelected","keys","selected","Number","getSelectedAsJSON","getSelectedIndex","removeRows","removeSelectedRows","AutomaticTable","BigDataTable","EditableBigDataTable","EditableLocalStorageTable","EditableTable","csvTableCompile","csv","del","columns","obj","data","d","dobj","tsvTableCompile","defaultTableCompile","html","NAME","DESCRIPTION","desc","defaultTableHeader","editableTableBody","defaultTableBody","description","TYPE","sortKey","directDOMTableCompile","table","directDOMTableHeader","directDOMEditableTableBody","directDOMTableBody","tr","displayCol","display","td","tn","String","linkable","linksConfig","a","linkCallback","ln","cobj","iii","lll","input","option","tOption","iiii","llll","option2","tOption2","directDOMPaginationControl","formatValidationMessages","ii","ll","module","LocalStorageTable","Spreadsheet","_generate"],"mappings":"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","file":"presentation-table.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"next-core-utilities\"), require(\"presentation-decorator\"), require(\"presentation-dom\"), require(\"presentation-models\"), require(\"presentation-request\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"presentation-table\", [\"next-core-utilities\", \"presentation-decorator\", \"presentation-dom\", \"presentation-models\", \"presentation-request\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"presentation-table\"] = factory(require(\"next-core-utilities\"), require(\"presentation-decorator\"), require(\"presentation-dom\"), require(\"presentation-models\"), require(\"presentation-request\"));\n\telse\n\t\troot[\"presentation-table\"] = factory(root[\"next-core-utilities\"], root[\"presentation-decorator\"], root[\"presentation-dom\"], root[\"presentation-models\"], root[\"presentation-request\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_next_core_utilities__, __WEBPACK_EXTERNAL_MODULE_presentation_decorator__, __WEBPACK_EXTERNAL_MODULE_presentation_dom__, __WEBPACK_EXTERNAL_MODULE_presentation_models__, __WEBPACK_EXTERNAL_MODULE_presentation_request__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import { isObject } from \"next-core-utilities\";\nimport { DecoratorView } from \"presentation-decorator\";\nimport {\n  TABLE_DATA_ATTRIBUTES,\n  csvTableCompile,\n  tsvTableCompile,\n  defaultTableCompile,\n  directDOMTableCompile,\n  directDOMTableHeader,\n  directDOMTableBody,\n  directDOMEditableTableBody,\n  directDOMPaginationControl\n} from \"./functions/buildTable.js\";\nimport formatValidationMessages from \"./functions/messages.js\";\nimport { request } from \"presentation-request\";\nimport Dom from \"presentation-dom\";\nimport { PaginationFactory, Model, Collection, LocalStorageCollection } from \"presentation-models\";\n\nconst DEFAULT_KEY = \"augmented.localstorage.autotable.key\";\nconst DEFAULT_SORT_TYPE = \"client\";\nconst DEFAULT_THEME = \"material\";\n\n/**\n * AutomaticTable<br/>\n * Creates a table automatically via a schema for defintion and a uri/json for data\n * @extends DecoratorView\n * @memberof Component\n * @example\n * const at = new AutomaticTable({\n *     schema: schema,\n *     el: \"#autoTable\",\n *     crossOrigin: false,\n *     sortable: true,\n *     lineNumbers: true,\n *     editable: true,\n *     uri: \"/example/data/table.json\"\n * });\n */\nclass AutomaticTable extends DecoratorView {\n  constructor(options) {\n    super(options);\n\n    const style = (this.style) ? this.style + \" \" : \"\";\n\n    if (options && options.theme) {\n      this.theme = `${style}${options.theme}`;\n    } else {\n      this.theme = `${style}${DEFAULT_THEME}`;\n    }\n\n    if (options && options.linkable) {\n      this.linkable = options.linkable;\n    } else {\n      this.linkable = false;\n    }\n\n    if (options && options.links) {\n      this.links = options.links;\n    } else {\n      this.links = {\n        wholeRow: true,\n        column: \"\",\n        link: \"rowLink\"\n      };\n    }\n\n    if (options && options.selectable) {\n      this.selectable = options.selectable;\n    } else {\n      this.selectable = false;\n    }\n\n    if (options && options.sortable) {\n      this.sortable = options.sortable;\n    } else {\n      this.sortable = false;\n    }\n\n    if (options && options.sortStyle) {\n      this.sortStyle = options.sortStyle;\n    } else {\n      this.sortStyle = DEFAULT_SORT_TYPE;\n    }\n\n    if (options && options.sortKey) {\n      this.sortKey = options.sortKey;\n    } else {\n      this.sortKey = null;\n    }\n\n    if (options && options.display) {\n      this.display = options.display;\n    } else {\n      this.display = null;\n    }\n\n    if (options && options.pagination) {\n      this.renderPaginationControl = options.pagination;\n    } else {\n      this.renderPaginationControl = false;\n    }\n\n    if (options && options.paginationAPI) {\n      this.paginationAPI = options.paginationAPI;\n    } else {\n      this.paginationAPI = null;\n    }\n\n    if (options && options.description) {\n      this.description = options.description;\n    } else {\n      this.description = \"\";\n    }\n\n    if (options && options.localStorage) {\n      this.localStorage = options.localStorage;\n    } else {\n      this.localStorage = false;\n    }\n\n    if (options && options.localStorageKey) {\n      this.localStorageKey = options.localStorageKey;\n    } else {\n      this.localStorageKey = DEFAULT_KEY;\n    }\n\n    if (options && options.editable) {\n      this.editable = options.editable;\n    } else {\n      this.editable = false;\n    }\n\n    if (options && options.crossOrigin) {\n      this.crossOrigin = options.crossOrigin;\n    } else {\n      this.crossOrigin = false;\n    }\n\n    if (options && options.lineNumbers) {\n      this.lineNumbers = options.lineNumbers;\n    } else {\n      this.lineNumbers = false;\n    }\n\n    if (options && options.uri) {\n      this.uri = options.uri;\n    } else {\n      this.uri = false;\n    }\n\n    if (options && options.data) {\n      this.data = options.data;\n    } else {\n      this.data = [];\n    }\n\n    this._columns = {};\n    this.isInitalized = false;\n    this.pageControlBound = false;\n\n    if (!this.model) {\n      this.model = new Model();\n    }\n\n    if (this.collection) {\n      this.collection.reset();\n    }\n\n    if (!this.collection && this.paginationAPI) {\n      this.collection = PaginationFactory.getPaginatedCollection(this.paginationAPI);\n      this.paginationAPI = this.collection.paginationAPI;\n      this.localStorage = false;\n    } else if (!this.collection && this.localStorage) {\n      this.collection = new LocalStorageCollection();\n    } else if (!this.collection) {\n      this.collection = new Collection();\n    }\n\n    if (options && options.schema) {\n      // check if this is a schema vs a URI to get a schema\n      if (isObject(options.schema)) {\n        this.schema = options.schema;\n      } else {\n        // is a URI?\n        let parsedSchema = null;\n        try {\n          parsedSchema = JSON.parse(options.schema);\n          if (parsedSchema && isObject(parsedSchema)) {\n            this.schema = parsedSchema;\n          }\n        } catch(e) {\n          //_logger.warn(\"AUGMENTED: AutoTable parsing string schema failed.  URI perhaps?\");\n        }\n        if (!this.schema) {\n          this.retrieveSchema(options.schema);\n          this.isInitalized = false;\n        }\n      }\n    } else {\n      this.schema = null;\n    }\n\n    if (this.uri && this.collection) {\n      this.collection.uri = options.uri;\n    }\n\n    if (this.data && (Array.isArray(this.data))) {\n      this.populate(this.data);\n    }\n\n    if (options && options.localStorageKey && !options.uri) {\n      this.localStorageKey = options.localStorageKey;\n      this.uri = null;\n    }\n\n    if (this.collection && this.uri) {\n      this.collection.uri = this.uri;\n    }\n    if (this.collection) {\n      this.collection.crossOrigin = this.crossOrigin;\n    }\n\n    if (this.schema) {\n      if ((!this.name || this.name === \"\") && this.schema.title) {\n        this.name = this.schema.title;\n        this.name.split(\" \").join(\"\");\n      }\n\n      if ((!this.description || this.description === \"\") && this.schema.description) {\n        this.description = this.schema.description;\n      }\n\n      if (!this.isInitalized) {\n        this._columns = this.schema.properties;\n        this.collection.schema = this.schema;\n        this.isInitalized = true;\n      }\n    } else {\n      this.isInitalized = false;\n    }\n  };\n\n  /**\n   * The theme property - The theme of this table (default is 'material')\n   * @property {string} theme The theme of this table\n   */\n\n /**\n  * The linkable property - enable links in a row (only works in non-editable tables)\n  * @property {boolean} linkable enable/disable linking a row\n  */\n\n  /**\n   * The selectable property - enable selecting a row in table\n   * @property {boolean} selectable enable/disable selecting a row\n   */\n\n  /**\n   * The sortable property - enable sorting in table\n   * @property {boolean} sortable enable sorting in the table\n   */\n\n  /**\n   * The sortStyle property - setup the sort API\n   * @property {string} sortStyle setup the sort API\n   */\n\n  /**\n   * The sortKey property\n   * @property {string} sortKey sorted key\n   * @private\n   */\n\n  /**\n   * The links property - setup linking structure for links in a row\n   * @property {boolean} linkable enable/disable linking a row\n   * @example links: {\n   * wholeRow: false, // link whole row vs column\n   * column: \"name\", // name of column\n   *\tlink: \"rowLink\" // callback\n   * }\n   */\n\n  /**\n   * The localStorage property - enables localStorage\n   * @property {boolean} localStorage The localStorage property\n   */\n\n  /**\n   * The localStorageKey property - set the key for use in storage\n   * @property {string} localStorageKey The localStorage key property\n   */\n\n  /**\n   * The editable property - enables editing of cells\n   * @property {boolean} editable The editable property\n   */\n\n /**\n  * Fields to display - null will display all\n  * @property {array} display Fields to display\n  */\n\n  // pagination\n /**\n  * The renderPaginationControl property - render the pagination control\n  * @property {boolean} renderPaginationControl render the pagination control\n  */\n\n /**\n  * The paginationAPI property - setup the paginatin API to use\n  * @property {Augmented.PaginationFactory.type} paginationAPI the pagination API to use\n  */\n\n /**\n  * The name property\n  * @property {string} name The name of the table\n  */\n\n /**\n  * The description property\n  * @property {string} description The description of the table\n  */\n\n  /**\n   * The crossOrigin property - enables cross origin fetch\n   * @property {boolean} crossOrigin The crossOrigin property\n   */\n\n  /**\n   * The lineNumber property - turns on line numbers\n   * @property {boolean} lineNumbers The lineNumbers property\n   */\n\n  /**\n   * The columns property\n   * @property {object} columns The columns property\n   * @private\n   */\n\n  /**\n   * The URI property\n   * @property {string} uri The URI property\n   */\n\n  /**\n   * The data property\n   * @property {array} data The data property\n   * @private\n   */\n\n  /**\n   * The collection property\n   * @property {Augmented.PaginatedCollection} collection The collection property\n   * @private\n   */\n\n  /**\n   * The initialized property\n   * @property {boolean} isInitalized The initialized property\n   */\n\n  /**\n   * The theme of the table\n   * @param {string} theme name of the theme\n   */\n   setTheme(theme) {\n     const el = Dom.selector(this.el);//((typeof this.el === 'string') ? document.querySelector(this.el) : this.el),\n     if (el) {\n       let e = el.querySelector(\"table\");\n       if (e) {\n         e.setAttribute(\"class\", theme);\n       }\n     }\n     this.theme = theme;\n   };\n\n  /**\n   * The default rowlink function callback called by row to format a link\n   * @param {array} row The row data\n   * @returns {string} Returns the link uri\n   */\n   rowLink(row) {\n     return \"\";\n   };\n\n  /**\n   * Sort the tabe by a key (sent via a UI Event)\n   * @param {string} key The key to sort by\n   */\n   sortBy(key) {\n     if (key && ( (this.editable) || (!this.editable && this.sortKey !== key))) {\n       this.sortKey = key;\n       this.collection.sortByKey(key);\n       this.refresh();\n     }\n   };\n\n /**\n  * Return the current page number\n  * @returns {number} The current page number\n  */\n  currentPage() {\n    return this.collection.currentPage;\n  };\n\n /**\n  * Return the total pages\n  * @returns {number} The total pages\n  */\n  totalPages() {\n    return this.collection.totalPages;\n  };\n\n /**\n  * Advance to the next page\n  */\n  nextPage() {\n    this.collection.nextPage();\n    this.refresh();\n  };\n\n /**\n  * Return to the previous page\n  */\n  previousPage() {\n    this.collection.previousPage();\n    this.refresh();\n  };\n\n /**\n  * Go to a specific page\n  * @param {number} page The page to go to\n  */\n  goToPage(page) {\n    this.collection.goToPage(page);\n    this.refresh();\n  };\n\n /**\n  * Return to the first page\n  */\n  firstPage() {\n    this.collection.firstPage();\n    this.refresh();\n  };\n\n /**\n  * Advance to the last page\n  */\n  lastPage() {\n    this.collection.lastPage();\n    this.refresh();\n  };\n\n /**\n  * Edit a cell at the row and column specified\n  * @param {number} row The row\n  * @param {number} col The column\n  * @param {any} value The value to set\n  */\n  editCell(row, col, value) {\n    if (row && col) {\n      let model = this.collection.at(row), name = this.columns[col];\n      if (model && name) {\n        model.set(name, value);\n      }\n    }\n  };\n\n /**\n  * Copy a cell at the row and column  to another\n  * @param {number} row1 The 'from' row\n  * @param {number} col1 The 'from' column\n  * @param {number} row2 The 'to' row\n  * @param {number} col2 The 'to' column\n  */\n  copyCell(row1, col1, row2, col2) {\n    if (row1 && col1 && row2 && col2) {\n      let model1 = this.collection.at(row1), name1 = this.columns[col1],\n      model2 = this.collection.at(row);\n      if (model1 && name1 && model2) {\n        model2.set(name1, value1);\n      }\n    }\n  };\n /**\n  * Clear a cell at the row and column specified\n  * @param {number} row The row\n  * @param {number} col The column\n  */\n  clearCell(row, col) {\n    this.editCell(row, col, null);\n  };\n\n /**\n  * Render the table\n  * @returns {object} Returns the view context ('this')\n  */\n  render() {\n    //console.log(\"render\");\n    if (!this.isInitalized) {\n      //console.warn(\"AUGMENTED: AutoTable Can't render yet, not initialized!\");\n      return this;\n    }\n    let e;\n    if (this.template) {\n      // refresh the table body only\n\t    //console.log(\"set progress.\");\n      this.showProgressBar(true);\n      if (this.el) {\n        e = (typeof this.el === 'string') ? document.querySelector(this.el) : this.el;\n        //console.log(\"my el\", e);\n        if (e) {\n\t        let tbody = e.querySelector(\"tbody\"), thead = e.querySelector(\"thead\");\n          if (this.sortable) {\n            this._unbindSortableColumnEvents();\n          }\n          if (this.editable) {\n            this._unbindCellChangeEvents();\n          }\n          if (this._columns && (Object.keys(this._columns).length > 0)){\n            while (thead.hasChildNodes()) {\n              thead.removeChild(thead.lastChild);\n            }\n            directDOMTableHeader(thead, this._columns, this.lineNumbers, this.sortKey, this.display, this.selectable);\n          } else {\n      \t\t  if (thead) {\n              while (thead.hasChildNodes()) {\n                thead.removeChild(thead.lastChild);\n              }\n      \t\t  }\n          }\n          if (this.collection && (this.collection.length > 0) && tbody){\n            while (tbody.hasChildNodes()) {\n              tbody.removeChild(tbody.lastChild);\n            }\n            if (this.editable) {\n              // links not supported\n              directDOMEditableTableBody(tbody, this.collection.toJSON(), this._columns, this.lineNumbers, this.sortKey, this.display, this.selectable, this.name);\n            } else {\n              directDOMTableBody(tbody, this.collection.toJSON(), this._columns, this.lineNumbers, this.sortKey, this.display, this.selectable, this.name, this.linkable, this.links, this[this.links.link]);\n            }\n          } else {\n            while (tbody.hasChildNodes()) {\n              tbody.removeChild(tbody.lastChild);\n            }\n          }\n        }\n      } else {\n        //console.warn(\"AUGMENTED: AutoTable no element anchor, not rendering.\");\n      }\n    } else {\n      //console.debug(\"no template\");\n      this.template = \"notused\";\n      this.showProgressBar(true);\n\n      if (this.el) {\n        //console.debug(\"no template with el \" + this.el);\n        e = (typeof this.el === 'string') ? document.querySelector(this.el) : this.el;\n        if (e) {\n          e.innerHTML = \"\";\n          // progress bar\n          let n = document.createElement(\"progress\"),\n          t = document.createTextNode(\"Please wait.\");\n          n.appendChild(t);\n          e.appendChild(n);\n\n          const isMaterial = (this._style.includes(\"material\"));\n\n          // the table\n          directDOMTableCompile(\n            e,\n            this.name,\n            this.description,\n            this._columns,\n            this.collection.toJSON(),\n            this.lineNumbers,\n            this.sortKey,\n            this.editable,\n            this.display,\n            this.selectable,\n            this.linkable,\n            this.links,\n            this[this.links.link],\n            isMaterial\n          );\n\n          // pagination control\n          if (this.renderPaginationControl) {\n            directDOMPaginationControl(e, this.currentPage(), this.totalPages());\n          }\n\n          // message\n          n = document.createElement(\"p\");\n          n.classList.add(\"message\");\n          e.appendChild(n);\n        }\n      } else {\n        //console.warn(\"AUGMENTED: AutoTable no element anchor, not rendering.\");\n      }\n\n      if (this.renderPaginationControl) {\n        this._bindPaginationControlEvents();\n      }\n    }\n    this.delegateEvents();\n\n    if (this.sortable) {\n      this._bindSortableColumnEvents();\n    }\n\n    if (this.editable) {\n      this._bindCellChangeEvents();\n    }\n\n    this.showProgressBar(false);\n    this.setTheme(this.theme);\n\n    return this;\n  };\n\n /**\n  * Fetch the schema from the source URI\n  * @param uri {string} the URI to fetch from\n  */\n  retrieveSchema(uri) {\n    const that = this;\n    let schema = null;\n\n    // TODO: make a fetch\n    request({\n      url: uri,\n      contentType: \"application/json\",\n      dataType: \"json\",\n      success: (data, status) => {\n        if (typeof data === \"string\") {\n          schema = JSON.parse(data);\n        } else {\n          schema = data;\n        }\n        const options = { \"schema\": schema };\n        that.initialize(options);\n      },\n      error: (data, status) => {\n        this.showMessage(\"AutomaticTable Failed to fetch schema!!\");\n      }\n    });\n  };\n\n /**\n  * Fetch the data from the source URI\n  */\n  fetch() {\n    // TODO: should be a promise\n    this.showProgressBar(true);\n\n    const view = this;\n\n    const successHandler = function() {\n      view.showProgressBar(false);\n      view.sortKey = null;\n      view.populate(view.collection.toJSON());\n      view.refresh();\n    };\n\n    const failHandler = function() {\n      view.showProgressBar(false);\n      view.showMessage(\"AutomaticTable fetch failed!\");\n    };\n\n    if (this.uri) {\n\n      this.collection.uri = this.uri;\n    }\n\n    this.collection.fetch({\n      reset: true,\n      success(){\n        successHandler();\n      },\n      error(){\n        failHandler();\n      }\n    });\n  };\n\n /**\n  * Save the data to the source\n  * This only functions if the table is editable\n  * @param {boolean} override Save even if not editable\n  * @returns Returns true if succesfull\n  */\n  save(override) {\n    if (this.editable || override) {\n      this.showProgressBar(true);\n\n      const view = this;\n\n      const successHandler = function() {\n        view.showProgressBar(false);\n        return true;\n      };\n\n      const failHandler = function() {\n        view.showProgressBar(false);\n        view.showMessage(\"AutomaticTable save failed!\");\n        //_logger.warn(\"AUGMENTED: AutomaticTable save failed!\");\n        return false;\n      };\n\n      this.collection.save({\n        reset: true,\n        success(){\n          successHandler();\n        },\n        error(){\n          failHandler();\n        }\n      });\n    }\n    return false;\n  };\n\n /**\n  * Populate the data in the table\n  * @param {array} source The source data array\n  */\n  populate(source) {\n    if (source && Array.isArray(source)) {\n      this.sortKey = null;\n      this.data = source;\n      this.collection.reset(this.data);\n    }\n  };\n\n /**\n  * Clear all the data in the table\n  */\n  clear() {\n    this.sortKey = null;\n    this.data = [];\n    this.collection.reset(null);\n  };\n\n /**\n  * Refresh the table (Same as render)\n  * @returns {object} Returns the view context ('this')\n  * @see AutomaticTable.render\n  */\n  refresh() {\n    return this.render();\n  };\n\n /**\n  * Save Cell Event\n  * @private\n  */\n  saveCell(event) {\n    const key = event.target, model = this.collection.at(parseInt(key.getAttribute(TABLE_DATA_ATTRIBUTES.INDEX)));\n    let value = key.value;\n    if ((key.getAttribute(\"type\")) === \"number\") {\n      value = parseInt(key.value);\n    }\n    model.set(key.getAttribute(TABLE_DATA_ATTRIBUTES.NAME), value);\n  };\n\n /**\n  * @private\n  */\n  _bindCellChangeEvents() {\n    let myEl = (typeof this.el === 'string') ? this.el : this.el.localName;\n    let cells = [].slice.call(document.querySelectorAll(myEl + \" table tr td input\"));\n    let i=0, l=cells.length;\n    for(i=0; i < l; i++) {\n      cells[i].addEventListener(\"change\", this.saveCell.bind(this), false);\n    }\n    // bind the select boxes as well\n    cells = [].slice.call(document.querySelectorAll(myEl + \" table tr td select\"));\n    i=0;\n    l=cells.length;\n    for(i=0; i < l; i++) {\n      cells[i].addEventListener(\"change\", this.saveCell.bind(this), false);\n    }\n  };\n\n /**\n  * @private\n  */\n  _unbindCellChangeEvents() {\n    let myEl = (typeof this.el === 'string') ? this.el : this.el.localName;\n    let cells = [].slice.call(document.querySelectorAll(myEl + \" table tr td input\"));\n    let i=0, l=cells.length;\n    for(i=0; i < l; i++) {\n      cells[i].removeEventListener(\"change\", this.saveCell, false);\n    }\n    // unbind the select boxes as well\n    cells = [].slice.call(document.querySelectorAll(myEl + \" table tr td select\"));\n    i=0;\n    l=cells.length;\n    for(i=0; i < l; i++) {\n      cells[i].removeEventListener(\"change\", this.saveCell, false);\n    }\n  };\n\n /**\n  * Export the table data in requested format\n  * @param {string} type The type requested (csv or html-default)\n  * @returns {string} The table data in requested format\n  */\n  exportTo(type) {\n    let e = \"\";\n    if (type === \"csv\") {\n      e = csvTableCompile(this.name, this.description, this._columns, this.collection.toJSON());\n    } else if (type === \"tsv\") {\n      e = tsvTableCompile(this.name, this.description, this._columns, this.collection.toJSON());\n    } else {\n      // html\n      e = defaultTableCompile(this.name, this.description, this._columns, this.collection.toJSON(), false, null);\n    }\n    return e;\n  };\n\n /**\n  * @private\n  */\n  _unbindPaginationControlEvents() {\n    if (this.pageControlBound) {\n      let myEl = (typeof this.el === 'string') ? this.el : this.el.localName;\n      let first = document.querySelector(myEl + \" div.paginationControl span.first\");\n      let previous = document.querySelector(myEl + \" div.paginationControl span.previous\");\n      let next = document.querySelector(myEl + \" div.paginationControl span.next\");\n      let last = document.querySelector(myEl + \" div.paginationControl span.last\");\n      if (first) {\n        first.removeEventListener(\"click\", this.firstPage, false);\n      }\n      if (previous) {\n        previous.removeEventListener(\"click\", this.previousPage, false);\n      }\n      if (next) {\n        next.removeEventListener(\"click\", this.nextPage, false);\n      }\n      if (last) {\n        last.removeEventListener(\"click\", this.lastPage, false);\n      }\n      this.pageControlBound = false;\n    }\n  };\n\n /**\n  * @private\n  */\n  _bindPaginationControlEvents() {\n    if (!this.pageControlBound) {\n      let myEl = (typeof this.el === 'string') ? this.el : this.el.localName;\n      let first = document.querySelector(myEl + \" div.paginationControl span.first\");\n      let previous = document.querySelector(myEl + \" div.paginationControl span.previous\");\n      let next = document.querySelector(myEl + \" div.paginationControl span.next\");\n      let last = document.querySelector(myEl + \" div.paginationControl span.last\");\n      if (first) {\n        first.addEventListener(\"click\", this.firstPage.bind(this), false);\n      }\n      if (previous) {\n        previous.addEventListener(\"click\", this.previousPage.bind(this), false);\n      }\n      if (next) {\n        next.addEventListener(\"click\", this.nextPage.bind(this), false);\n      }\n      if (last) {\n        last.addEventListener(\"click\", this.lastPage.bind(this), false);\n      }\n      this.pageControlBound = true;\n    }\n  };\n\n /**\n  * @private\n  */\n  _deriveEventTarget(event) {\n    let key = null;\n    if (event) {\n      key = event.target.getAttribute(TABLE_DATA_ATTRIBUTES.NAME);\n    }\n    return key;\n  };\n\n /**\n  * @private\n  */\n  _sortByHeaderEvent(event) {\n    let key = this._deriveEventTarget(event);\n    this.sortBy(key);\n  };\n\n /**\n  * @private\n  */\n  _unbindSortableColumnEvents()  {\n    if (this.el && this.sortable) {\n      let list;\n      if (typeof this.el === 'string') {\n        list = document.querySelectorAll(this.el + \" table tr th\");\n      } else {\n        list = document.querySelectorAll(this.el.localName + \" table tr th\");\n      }\n      let i = 0, l = list.length;\n      for (i = 0; i < l; i++) {\n        list[i].removeEventListener(\"click\", this._sortByHeaderEvent, false);\n      }\n    }\n  };\n\n /**\n  * @private\n  */\n  _bindSortableColumnEvents()  {\n    if (this.el && this.sortable) {\n      let list;\n      if (typeof this.el === 'string') {\n        list = document.querySelectorAll(this.el + \" table tr th\");\n      } else {\n        list = document.querySelectorAll(this.el.localName + \" table tr th\");\n      }\n      let i = 0, l = list.length;\n      for (i = 0; i < l; i++) {\n        if (list[i].getAttribute(TABLE_DATA_ATTRIBUTES.NAME) === \"lineNumber\") {\n          // Do I need to do something?\n        } else {\n          list[i].addEventListener(\"click\", this._sortByHeaderEvent.bind(this), false);\n        }\n      }\n    }\n  };\n\n /**\n  * An overridable template compile\n  * @returns {string} Returns the template\n  */\n  compileTemplate() {\n    return \"\";\n  };\n\n /**\n  * Sets the URI\n  * @param {string} uri The URI\n  */\n  setURI(uri) {\n    if (uri) {\n      this.uri = uri;\n      this.collection.uri = uri;\n    }\n  };\n\n /**\n  * Sets the schema\n  * @param {object} schema The JSON schema of the dataset\n  */\n  setSchema(schema) {\n    this.schema = schema;\n    this._columns = schema.properties;\n    this.collection.reset();\n    this.collection.schema = schema;\n\n    if (this.uri) {\n      this.collection.uri = this.uri;\n    }\n  };\n\n /**\n  * Enable/Disable the progress bar\n  * @param {boolean} show Show or Hide the progress bar\n  */\n  showProgressBar(show) {\n    if (this.el) {\n      let e = (typeof this.el === 'string') ? document.querySelector(this.el) : this.el;\n      if (e) {\n        let p = e.querySelector(\"progress\");\n        if (p) {\n          p.style.display = (show) ? \"block\" : \"none\";\n          p.style.visibility = (show) ? \"visible\" : \"hidden\";\n        }\n      }\n    }\n  };\n\n /**\n  * Show a message related to the table\n  * @param {string} message Some message to display\n  */\n  showMessage(message) {\n    if (this.el && message) {\n      let e = (typeof this.el === 'string') ? document.querySelector(this.el) : this.el;\n      let p = e.querySelector(\"p[class=message]\");\n      if (p) {\n        p.innerHTML = message;\n      }\n    }\n  };\n /**\n\n  * Validate the table\n  * @returns {boolean} Returns true on success of validation\n  */\n  validate() {\n    let messages = (this.collection) ? this.collection.validate() : null;\n    if (!this.collection.isValid() && messages && messages.messages) {\n      this.showMessage(formatValidationMessages(messages.messages));\n    } else {\n      this.showMessage(\"\");\n    }\n    return messages;\n  };\n\n /**\n  * Is the table valid\n  * @returns {boolean} Returns true if valid\n  */\n  isValid() {\n    return (this.collection) ? this.collection.isValid() : true;\n  };\n\n /**\n  * Remove the table and all binds\n  * @returns Returns the context (this)\n  */\n  remove() {\n    /* off to unbind the events */\n    this.undelegateEvents();\n    this.off();\n    this.stopListening();\n    if (this.el) {\n      const el = Dom.selector(this.el);\n      if (el) {\n        el.innerHTML = \"\";\n      } else {\n        //console.debug(\"no el selected to remove \" + this.el);\n      }\n    } else {\n      //console.debug(\"no el to remove\");\n    }\n    Dom.empty(this.el);\n\n    return this;\n  };\n /**\n  * Gets the selected models\n  * @returns {Array} Returns array of selected rows (models)\n  * @param {boolean} json convert to array of objects\n  */\n  getSelected(json) {\n    const keys = Object.keys(this.model._attributes), l = keys.length, selected = [];\n    let i = 0;\n    for (i = 0; i < l; i++) {\n      if (keys[i].includes(\"row-\") && this.model._attributes[keys[i]] === true) {\n        const n = Number(keys[i].substring(4));\n        const model = this.collection.at(n);\n        if (json) {\n          selected.push(model.toJSON());\n        } else {\n          selected.push(model);\n        }\n      }\n    }\n    return selected;\n  };\n\n  /**\n   * Gets the selected models as JSON\n   * @returns {Array} Returns array of selected rows (JSON Objects)\n   */\n  getSelectedAsJSON() {\n    return this.getSelected(true);\n  };\n\n /**\n  * Gets the selected row indexes\n  * @returns {Array} Returns array of selected rows (indexes)\n  */\n  getSelectedIndex() {\n    const keys = Object.keys(this.model._attributes), l = keys.length, selected = [];\n    let i = 0;\n    for (i = 0; i < l; i++) {\n      if (keys[i].includes(\"row-\") && this.model._attributes[keys[i]] === true) {\n        selected.push(Number(keys[i].substring(4)));\n      }\n    }\n    return selected;\n  };\n\n /**\n  * Removes the models\n  * @param {Array} rows Models of the rows to remove\n  */\n  removeRows(rows) {\n    return this.collection.remove(rows);\n    /*const l = rows.length;\n    let i = 0;\n    for (i = 0; i < l; i++) {\n      const model = rows[i];\n      if (!model.uri) {\n        model.uri = this.uri + \"/\" + model.id;\n      }\n      this.collection.remove(n);\n      model.destroy();\n    }\n\n    return l;*/\n  };\n\n  /**\n   * Removes the selected models\n   */\n  removeSelectedRows() {\n    return this.removeRows(this.getSelected());\n  };\n\n};\n\nexport default AutomaticTable;\n","import AutomaticTable from \"./autoTable.js\";\n\n/**\n * Instance class preconfigured for sorting and pagination\n * @extends AutomaticTable\n * @memberof Component\n */\nclass BigDataTable extends AutomaticTable {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    options.lineNumbers = true;\n    options.sortable = true;\n    super(options);\n    this.renderPaginationControl = true;\n  };\n};\n\nexport default BigDataTable;\n","import AutomaticTable from \"./autoTable.js\";\n\n/**\n * Instance class preconfigured for sorting and pagination\n * @extends AutomaticTable\n * @memberof Component\n */\nclass EditableBigDataTable extends AutomaticTable {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    options.lineNumbers = true;\n    options.sortable = true;\n    options.editable = true;\n    super(options);\n    this.renderPaginationControl = true;\n  };\n};\n\nexport default EditableBigDataTable;\n","import AutomaticTable from \"./autoTable.js\";\n\n/**\n* Instance class preconfigured for editing, sorting, from local storage\n* @extends AutomaticTable\n* @memberof Component\n*/\nclass EditableLocalStorageTable extends AutomaticTable {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    options.lineNumbers = true;\n    options.sortable = true;\n    options.editable = true;\n    options.localStorage = true;\n    super(options);\n    this.renderPaginationControl = true;\n  };\n};\n\nexport default EditableLocalStorageTable;\n","import AutomaticTable from \"./autoTable.js\";\n\n/**\n * Instance class preconfigured for editing\n * @extends AutomaticTable\n * @memberof Component\n */\nclass EditableTable extends AutomaticTable {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    options.lineNumbers = true;\n    options.editable = true;\n    super(options);\n  };\n};\n\nexport default EditableTable;\n","// Tables and Grids\n\nexport const TABLE_DATA_ATTRIBUTES = {\n  \"NAME\":           \"data-name\",\n  \"TYPE\":           \"data-type\",\n  \"DESCRIPTION\":    \"data-description\",\n  \"INDEX\":          \"data-index\",\n  \"LABEL\":          \"data-label\",\n  \"SORT_CLASS\":      \"sorted\"\n};\n\nexport const csvTableCompile = (name, desc, columns, data, del) => {\n  let csv = \"\";\n  if (!del) {\n    del = \",\";\n  }\n  if (columns) {\n    let key, obj;\n    for (key in columns) {\n      if (columns.hasOwnProperty(key)) {\n        obj = columns[key];\n        csv = csv + key + del;\n      }\n    }\n    csv = csv.slice(0, -1);\n    csv = csv + \"\\n\";\n  }\n\n  let i, d, dkey, dobj, t;\n  const l = data.length;\n  for (i = 0; i < l; i++) {\n    d = data[i];\n    for (dkey in d) {\n      if (d.hasOwnProperty(dkey)) {\n        dobj = d[dkey];\n        t = (typeof dobj);\n        csv = csv + dobj + del;\n      }\n    }\n    csv = csv.slice(0, -1);\n    csv = csv + \"\\n\";\n  }\n  return csv;\n};\n\nexport const tsvTableCompile = (name, desc, columns, data) => {\n  return csvTableCompile(name, desc, columns, data, \"\\t\");\n};\n\nexport const defaultTableCompile = (name, desc, columns, data, lineNumbers, sortKey, editable, display) => {\n  let html = `<table ${TABLE_DATA_ATTRIBUTES.NAME}=\"${name}\" ${TABLE_DATA_ATTRIBUTES.DESCRIPTION}=\"${desc}\">`;\n  if (name) {\n    html = html + \"<caption\";\n    if (desc) {\n      html = html + ` title=\"${desc}\"`;\n    }\n    html = html + `>${name}</caption>`;\n  }\n  html = html + \"<thead>\";\n  html = html + defaultTableHeader(columns, lineNumbers, sortKey, display);\n  html = html + \"</thead><tbody>\";\n  if (data) {\n    if (editable) {\n      html = html + editableTableBody(data, columns, lineNumbers, sortKey, display);\n    } else {\n      html = html + defaultTableBody(data, columns, lineNumbers, sortKey, display);\n    }\n  }\n  html = html + \"</tbody></table>\";\n  return html;\n};\n\nexport const defaultTableHeader = (columns, lineNumbers, sortKey, display) => {\n  let html = \"\";\n  if (columns) {\n    html = html + \"<tr>\";\n    if (lineNumbers) {\n      html = html + `<th ${TABLE_DATA_ATTRIBUTES.NAME}=\"lineNumber\">#</th>`;\n    }\n    let key, obj;\n    for (key in columns) {\n      if (columns.hasOwnProperty(key)) {\n        obj = columns[key];\n        html = html + `<th ${TABLE_DATA_ATTRIBUTES.NAME}=\"${key}\" ${TABLE_DATA_ATTRIBUTES.DESCRIPTION}=\"${obj.description}\" ${TABLE_DATA_ATTRIBUTES.TYPE}=\"${obj.type}\"`;\n        if (sortKey === key) {\n          html = html + \" class=\\\"\" + TABLE_DATA_ATTRIBUTES.SORT_CLASS + \"\\\"\";\n        }\n        html = html + \">\" + key + \"</th>\";\n      }\n    }\n    html = html + \"</tr>\";\n  }\n  return html;\n};\n\nexport const defaultTableBody = (data, columns, lineNumbers, sortKey, display) => {\n  let i, d, dkey, dobj, html = \"\", l = data.length, t;\n  for (i = 0; i < l; i++) {\n    d = data[i];\n    html = html + \"<tr>\";\n    if (lineNumbers) {\n      html = html + \"<td class=\\\"label number\\\">\" + (i+1) + \"</td>\";\n    }\n    for (dkey in d) {\n      if (d.hasOwnProperty(dkey)) {\n        dobj = d[dkey];\n        t = (typeof dobj);\n        html = html + \"<td \" + TABLE_DATA_ATTRIBUTES.TYPE + \"=\\\"\" + t + \"\\\" class=\\\"\" + t;\n        if (sortKey === dkey) {\n          html = html + \" \" + TABLE_DATA_ATTRIBUTES.SORT_CLASS;\n        }\n        html = html + \"\\\">\" + dobj + \"</td>\";\n      }\n    }\n    html = html + \"</tr>\";\n  }\n  return html;\n};\n\nexport const directDOMTableCompile = (el, name, desc, columns, data, lineNumbers, sortKey, editable, display, selectable, linkable, linksConfig, linkCallback, isMaterial) => {\n  const table = document.createElement(\"table\"), thead = document.createElement(\"thead\"), tbody = document.createElement(\"tbody\");\n  let n, t;\n\n  // Binding\n  table.setAttribute(\"data-\" + name, name);\n\n  table.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, name);\n  table.setAttribute(TABLE_DATA_ATTRIBUTES.DESCRIPTION, desc);\n  if (desc) {\n    n = document.createElement(\"caption\");\n    if (name) {\n      n.setAttribute(\"title\", name);\n    }\n    t = document.createTextNode(desc);\n    n.appendChild(t);\n    table.appendChild(n);\n  }\n  directDOMTableHeader(thead, columns, lineNumbers, sortKey, display, selectable, isMaterial);\n  table.appendChild(thead);\n  table.appendChild(tbody);\n  if (data) {\n    if (editable) {\n      directDOMEditableTableBody(tbody, data, columns, lineNumbers, sortKey, display, selectable, name, linkable, linksConfig, linkCallback);\n    } else {\n      directDOMTableBody(tbody, data, columns, lineNumbers, sortKey, display, selectable, name, linkable, linksConfig, linkCallback);\n    }\n  }\n  el.appendChild(table);\n};\n\nexport const directDOMTableHeader = (el, columns, lineNumbers, sortKey, display, selectable, isMaterial) => {\n  if (columns && el) {\n    const tr = document.createElement(\"tr\");\n    let n, t, key, obj;\n    if (selectable) {\n      n = document.createElement(\"th\");\n      n.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, \"select\");\n      if (isMaterial) {\n        n.innerHTML = `<i class=\"material-icons\">check_box_outline_blank</i>`;\n      } else {\n        t = document.createTextNode(\"\\u274f\");\n        n.appendChild(t);\n      }\n      tr.appendChild(n);\n    }\n\n    if (lineNumbers) {\n      n = document.createElement(\"th\");\n      n.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, \"lineNumber\");\n      t = document.createTextNode(\"#\");\n      n.appendChild(t);\n      tr.appendChild(n);\n    }\n\n    for (key in columns) {\n      let displayCol = true;\n      if (display !== null) {\n          displayCol = (display.indexOf(key) !== -1);\n      }\n\n      if (displayCol && columns.hasOwnProperty(key)) {\n        obj = columns[key];\n\n        n = document.createElement(\"th\");\n        n.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, key);\n        n.setAttribute(TABLE_DATA_ATTRIBUTES.DESCRIPTION, obj.description);\n        n.setAttribute(TABLE_DATA_ATTRIBUTES.TYPE, obj.type);\n        if (sortKey === key) {\n          n.classList.add(TABLE_DATA_ATTRIBUTES.SORT_CLASS);\n        }\n\n        t = document.createTextNode(key);\n        n.appendChild(t);\n        tr.appendChild(n);\n      }\n    }\n    el.appendChild(tr);\n  }\n};\n\nexport const directDOMTableBody = (el, data, columns, lineNumbers, sortKey, display, selectable, name, linkable, linksConfig, linkCallback) => {\n  const l = data.length;\n  let i, d, dkey, dobj, t, td, tn, tr, cobj;\n\n  for (i = 0; i < l; i++) {\n    d = data[i];\n    tr = document.createElement(\"tr\");\n\n    if (selectable) {\n      td = document.createElement(\"td\");\n      td.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, \"select\");\n      tn = document.createElement(\"input\");\n      tn.type = \"checkbox\";\n      tn.name = String(i);\n      tn.value = String(i);\n      // Binding\n      tn.setAttribute(\"data-\" + name, \"row-\" + i);\n\n      td.appendChild(tn);\n      td.classList.add(\"label\", \"select\");\n      tr.appendChild(td);\n    }\n\n    if (lineNumbers) {\n      td = document.createElement(\"td\");\n      tn = document.createTextNode(String(i + 1));\n      td.appendChild(tn);\n      td.classList.add(\"label\", \"number\");\n      tr.appendChild(td);\n    }\n    for (dkey in columns) {\n      let displayCol = true;\n      if (display !== null) {\n          displayCol = (display.indexOf(dkey) !== -1);\n      }\n      if (displayCol && d.hasOwnProperty(dkey)) {\n        dobj = d[dkey];\n        t = (typeof dobj);\n        td = document.createElement(\"td\");\n        tn = document.createTextNode(dobj);\n\n        if (linkable && linksConfig && linkCallback &&\n            ((linksConfig.column === dkey) || (linksConfig.wholeRow)) ) {\n          const a = document.createElement(\"a\");\n          //a.title = \"my title text\";\n          a.href = linkCallback(d);\n          a.appendChild(tn);\n          td.appendChild(a);\n        } else {\n          td.appendChild(tn);\n        }\n\n        td.classList.add(t);\n        if (sortKey === dkey) {\n          td.classList.add(TABLE_DATA_ATTRIBUTES.SORT_CLASS);\n        }\n        td.setAttribute(TABLE_DATA_ATTRIBUTES.TYPE, t);\n        td.setAttribute(TABLE_DATA_ATTRIBUTES.LABEL, dkey);\n        tr.appendChild(td);\n      }\n    }\n    el.appendChild(tr);\n  }\n};\n\nexport const directDOMEditableTableBody = (el, data, columns, lineNumbers, sortKey, display, selectable, name) => {\n  const l = data.length, ln = lineNumbers;\n  let i, d, dkey, dobj, t, td, tn, tr, input, cobj;\n  for (i = 0; i < l; i++) {\n    d = data[i];\n    tr = document.createElement(\"tr\");\n\n    if (selectable) {\n      td = document.createElement(\"td\");\n      td.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, \"select\");\n      tn = document.createElement(\"input\");\n      tn.type = \"checkbox\";\n      tn.name = String(i);\n      tn.value = String(i);\n      td.appendChild(tn);\n      td.classList.add(\"label\", \"select\");\n      tr.appendChild(td);\n    }\n\n    if (ln) {\n      td = document.createElement(\"td\");\n      tn = document.createTextNode(String(i + 1));\n      td.appendChild(tn);\n      td.classList.add(\"label\", \"number\");\n      tr.appendChild(td);\n    }\n\n    for (dkey in d) {\n      let displayCol = true;\n      if (display !== null) {\n          displayCol = (display.indexOf(dkey) !== -1);\n      }\n\n      if (displayCol && d.hasOwnProperty(dkey)) {\n        cobj = (columns[dkey]) ? columns[dkey] : {};\n        dobj = d[dkey];\n\n        t = (typeof dobj);\n\n        td = document.createElement(\"td\");\n        td.classList.add(t);\n        if (sortKey === dkey) {\n          td.classList.add(TABLE_DATA_ATTRIBUTES.SORT_CLASS);\n        }\n        td.setAttribute(TABLE_DATA_ATTRIBUTES.TYPE, t);\n        td.setAttribute(TABLE_DATA_ATTRIBUTES.LABEL, dkey);\n        // input field\n\n        if (t === \"object\") {\n          if (Array.isArray(dobj)) {\n            let iii = 0, lll = dobj.length, option, tOption;\n            input = document.createElement(\"select\");\n            for (iii = 0; iii < lll; iii++) {\n              option = document.createElement(\"option\");\n              option.setAttribute(\"value\", dobj[iii]);\n              tOption = document.createTextNode(dobj[iii]);\n              option.appendChild(tOption);\n              input.appendChild(option);\n            }\n          } else {\n            input = document.createElement(\"textarea\");\n            input.value = JSON.stringify(dobj);\n          }\n        } else if (t === \"boolean\") {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"checkbox\");\n          if (dobj === true) {\n            input.setAttribute(\"checked\", \"checked\");\n          }\n          input.value = dobj;\n        } else if (t === \"number\") {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"number\");\n          input.value = dobj;\n        } else if (t === \"string\" && cobj.enum) {\n          input = document.createElement(\"select\");\n          let iiii = 0, llll = cobj.enum.length, option2, tOption2;\n          for (iiii = 0; iiii < llll; iiii++) {\n            option2 = document.createElement(\"option\");\n            option2.setAttribute(\"value\", cobj.enum[iiii]);\n            tOption2 = document.createTextNode(cobj.enum[iiii]);\n            if (dobj === cobj.enum[iiii]) {\n              option2.setAttribute(\"selected\", \"selected\");\n            }\n            option2.appendChild(tOption2);\n            input.appendChild(option2);\n          }\n        } else if (t === \"string\" && (cobj.format === \"email\")) {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"email\");\n          input.value = dobj;\n        } else if (t === \"string\" && (cobj.format === \"uri\")) {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"url\");\n          input.value = dobj;\n        } else if (t === \"string\" && (cobj.format === \"date-time\")) {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"datetime\");\n          input.value = dobj;\n        } else {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"text\");\n          input.value = dobj;\n        }\n\n        if (t === \"string\" && cobj.pattern) {\n          input.setAttribute(\"pattern\", cobj.pattern);\n        }\n\n        if (cobj.minimum) {\n          input.setAttribute(\"min\", cobj.minimum);\n        }\n\n        if (cobj.maximum) {\n          input.setAttribute(\"max\", cobj.maximum);\n        }\n\n        if (t === \"string\" && cobj.minlength) {\n          input.setAttribute(\"minlength\", cobj.minlength);\n        }\n\n        if (t === \"string\" && cobj.maxlength) {\n          input.setAttribute(\"maxlength\", cobj.maxlength);\n        }\n\n        input.setAttribute(TABLE_DATA_ATTRIBUTES.NAME, dkey);\n        input.setAttribute(TABLE_DATA_ATTRIBUTES.INDEX, i);\n\n        // Binding\n        input.setAttribute(\"data-\" + name, name);\n\n        td.appendChild(input);\n\n        tr.appendChild(td);\n      }\n    }\n    el.appendChild(tr);\n  }\n};\n\n/*\n* << First | < Previous | # | Next > | Last >>\n*/\nexport const directDOMPaginationControl = (el, currentPage, totalPages) => {\n  let d, n, t;\n  d = document.createElement(\"div\");\n  d.classList.add(\"paginationControl\");\n\n  n = document.createElement(\"span\");\n  n.classList.add(\"first\");\n  t = document.createTextNode(\"<< First\");\n  n.appendChild(t);\n  d.appendChild(n);\n\n  n = document.createElement(\"span\");\n  n.classList.add(\"previous\");\n  t = document.createTextNode(\"< Previous\");\n  n.appendChild(t);\n  d.appendChild(n);\n\n  n = document.createElement(\"span\");\n  n.classList.add(\"current\");\n  t = document.createTextNode(`${currentPage} of ${totalPages}`);\n  n.appendChild(t);\n  d.appendChild(n);\n\n  n = document.createElement(\"span\");\n  n.classList.add(\"next\");\n  t = document.createTextNode(\"Next >\");\n  n.appendChild(t);\n  d.appendChild(n);\n\n  n = document.createElement(\"span\");\n  n.classList.add(\"last\");\n  t = document.createTextNode(\"Last >>\");\n  n.appendChild(t);\n  d.appendChild(n);\n\n  el.appendChild(d);\n};\n","const formatValidationMessages = (messages) => {\n  let html = \"\";\n  if (messages && messages.length > 0) {\n    html = html + \"<ul class=\\\"errors\\\">\";\n    const l = messages.length;\n    let i = 0, ii = 0;\n    for (i = 0; i < l; i++) {\n      const ll = messages[i].errors.length;\n      for (ii = 0; ii < ll; ii++) {\n        html = html + \"<li>\" + messages[i].errors[ii] + \"</li>\";\n      }\n    }\n    html = html + \"</ul>\";\n  }\n  return html;\n};\n\nexport default formatValidationMessages;\n","import AutomaticTable from \"./autoTable.js\";\nimport BigDataTable from \"./bigDataTable.js\";\nimport EditableBigDataTable from \"./editableBigTable.js\";\nimport EditableLocalStorageTable from \"./editableLocalStorageTable.js\";\nimport EditableTable from \"./editableTable.js\";\nimport LocalStorageTable from \"./localStorageTable.js\";\nimport Spreadsheet from \"./spreadsheet.js\";\n\nmodule.exports.AutomaticTable = AutomaticTable;\nmodule.exports.BigDataTable = BigDataTable;\nmodule.exports.EditableBigDataTable = EditableBigDataTable;\nmodule.exports.EditableLocalStorageTable = EditableLocalStorageTable;\nmodule.exports.EditableTable = EditableTable;\nmodule.exports.LocalStorageTable = LocalStorageTable;\nmodule.exports.Spreadsheet = Spreadsheet;\n","import AutomaticTable from \"./autoTable.js\";\n\n/**\n* Instance class preconfigured for local storage-based table\n* @extends AutomaticTable\n* @memberof Component\n*/\nclass LocalStorageTable extends AutomaticTable {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    options.lineNumbers = true;\n    options.sortable = true;\n    options.editable = false;\n    options.localStorage = true;\n    super(options);\n    this.renderPaginationControl = true;\n  };\n};\n\nexport default LocalStorageTable;\n","import { isObject } from \"next-core-utilities\";\nimport AutomaticTable from \"./autoTable.js\";\nimport { Collection, LocalStorageCollection } from \"presentation-models\";\n\n/**\n * Instance class preconfigured for editing for use as a Spreadsheet.<br/>\n * If a propery for length is not specified, it will buffer 10 lines for editing.\n * @extends AutomaticTable\n * @memberof Component\n */\nclass Spreadsheet extends AutomaticTable {\n  constructor(options) {\n    super(options);\n    // TODO: overrides?\n    this.lineNumbers = true;\n    this.sortable = true;\n    this.editable = true;\n\n    if (options && options.pagination) {\n      this.renderPaginationControl = options.pagination;\n    } else {\n      this.renderPaginationControl = false;\n    }\n\n    if (options && options.rows) {\n      this.rows = options.rows;\n    } else {\n      this.rows = 10;\n    }\n\n    if (options && options.columns) {\n      this.columns = options.columns;\n    } else {\n      this.rows = 5;\n    }\n\n    if (this.collection) {\n      this.collection.reset();\n    } else if (!this.collection && this.localStorage) {\n      this.collection = new LocalStorageCollection();\n    } else if (!this.collection) {\n      this.collection = new Collection();\n    }\n\n    // TODO: this might belong in parent\n\n    if (options) {\n      if (options.schema) {\n        // check if this is a schema vs a URI to get a schema\n        if (isObject(options.schema)) {\n          this.schema = options.schema;\n        } else {\n          // is a URI?\n          let parsedSchema = null;\n          try {\n            parsedSchema = JSON.parse(options.schema);\n            if (parsedSchema && isObject(parsedSchema)) {\n              this.schema = parsedSchema;\n            }\n          } catch(e) {\n            // AutoTable parsing string schema failed.  URI perhaps?\n            //_logger.warn(\"AUGMENTED: AutoTable parsing string schema failed.  URI perhaps?\");\n          }\n          if (!this.schema) {\n            this.retrieveSchema(options.schema);\n            this.isInitalized = false;\n            //return false;\n          }\n        }\n      }\n\n      if (options.el) {\n        this.el = options.el;\n      }\n\n      if (options.uri) {\n        this.uri = options.uri;\n        this.collection.url = options.uri;\n      }\n\n      if (options.data && (Array.isArray(options.data))) {\n        this.populate(options.data);\n      }\n\n      if (options.sortable) {\n        this.sortable = options.sortable;\n      }\n\n      if (options.lineNumbers) {\n        this.lineNumbers = options.lineNumbers;\n      }\n\n      if (options.localStorageKey && !options.uri) {\n        this.localStorageKey = options.localStorageKey;\n        this.uri = null;\n      }\n    }\n\n    if (this.collection && this.uri) {\n      this.collection.url = this.uri;\n    }\n    if (this.collection) {\n      this.collection.crossOrigin = this.crossOrigin;\n    }\n    if (this.schema) {\n      if ((!this.name || this.name === \"\") && this.schema.title) {\n        this.name = this.schema.title;\n      }\n      if ((!this.description || this.description === \"\") && this.schema.description) {\n        this.description = this.schema.description;\n      }\n\n      if (!this.isInitalized) {\n        this._columns = this.schema.properties;\n        this.collection.schema = this.schema;\n      }\n    } else {\n      //very basic schema\n      this.schema = {\n        \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n        \"title\": \"untitled\",\n        \"type\": \"object\",\n        \"description\": \"\",\n        \"properties\": {\n        }\n      };\n\n      let i = 0;\n\n      for (i = 0; i < this.columns; i++) {\n        this.schema.properties[String.fromCharCode(65 + i)] = {\n          \"description\": \"\",\n          \"type\": \"string\"\n        };\n      }\n\n      this._columns = this.schema.properties;\n      this.collection.schema = this.schema;\n    }\n\n    //buffer\n    this._generate();\n    this.collection.set(this.data);\n\n    this.isInitalized = true;\n  };\n\n  /**\n   * @propery {number} columns Defines a set of columns in the spreadsheet\n   * @memberof Spreadsheet\n   */\n\n  /**\n   * @propery {number} rows Defines a set of rows in the spreadsheet\n   * @memberof Spreadsheet\n   */\n\n  _generate() {\n    if (this.schema && this.schema.properties) {\n      let i = 0, ii = 0, keys = Object.keys(this.schema.properties), l = keys.length, obj = {};\n      this.data = [];\n      for (ii = 0; ii < this.rows; ii++) {\n        obj = {};\n        for (i = 0; i < l; i++) {\n          obj[keys[i]] = \"\";\n        }\n        this.data.push(obj);\n      }\n    }\n  }\n};\n\nexport default Spreadsheet;\n","module.exports = __WEBPACK_EXTERNAL_MODULE_next_core_utilities__;","module.exports = __WEBPACK_EXTERNAL_MODULE_presentation_decorator__;","module.exports = __WEBPACK_EXTERNAL_MODULE_presentation_dom__;","module.exports = __WEBPACK_EXTERNAL_MODULE_presentation_models__;","module.exports = __WEBPACK_EXTERNAL_MODULE_presentation_request__;"],"sourceRoot":""}